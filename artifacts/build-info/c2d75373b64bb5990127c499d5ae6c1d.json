{
	"id": "c2d75373b64bb5990127c499d5ae6c1d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/ComputeRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract ComputeRewards is AccessControl, ReentrancyGuard {\r\n    IERC20 public immutable rewardToken; // $AIBOT\r\n    bytes32 public constant ORACLE_ROLE = keccak256(\"ORACLE_ROLE\");\r\n\r\n    mapping(address => uint256) public rewards;\r\n\r\n    event RewardsAllocated(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 amount);\r\n\r\n    constructor(address _rewardTokenAddress) {\r\n        rewardToken = IERC20(_rewardTokenAddress);\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ORACLE_ROLE, msg.sender);\r\n    }\r\n\r\n    function allocateRewards(address[] calldata _users, uint256[] calldata _amounts) external onlyRole(ORACLE_ROLE) {\r\n        require(_users.length == _amounts.length, \"ComputeRewards: Input array length mismatch\");\r\n        for (uint i = 0; i < _users.length; i++) {\r\n            rewards[_users[i]] += _amounts[i];\r\n            emit RewardsAllocated(_users[i], _amounts[i]);\r\n        }\r\n    }\r\n\r\n    function claimReward() external nonReentrant {\r\n        uint256 reward = rewards[msg.sender];\r\n        require(reward > 0, \"ComputeRewards: No rewards to claim\");\r\n        \r\n        rewards[msg.sender] = 0;\r\n        \r\n        require(rewardToken.transfer(msg.sender, reward), \"ComputeRewards: Token transfer failed\");\r\n        emit RewardClaimed(msg.sender, reward);\r\n    }\r\n\r\n    function availableRewards(address _user) external view returns (uint256) {\r\n        return rewards[_user];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 390,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/ComputeRewards.sol": {
				"ComputeRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsAllocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "allocateRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/ComputeRewards.sol\":245:1720  contract ComputeRewards is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contract/ComputeRewards.sol\":617:817  constructor(address _rewardTokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract/ComputeRewards.sol\":690:709  _rewardTokenAddress */\n  dup1\n    /* \"contract/ComputeRewards.sol\":669:710  rewardToken = IERC20(_rewardTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract/ComputeRewards.sol\":721:763  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contract/ComputeRewards.sol\":732:750  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contract/ComputeRewards.sol\":752:762  msg.sender */\n  caller\n    /* \"contract/ComputeRewards.sol\":721:731  _grantRole */\n  shl(0x20, tag_9)\n    /* \"contract/ComputeRewards.sol\":721:763  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contract/ComputeRewards.sol\":774:809  _grantRole(ORACLE_ROLE, msg.sender) */\n  tag_10\n    /* \"contract/ComputeRewards.sol\":400:424  keccak256(\"ORACLE_ROLE\") */\n  0x68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1\n    /* \"contract/ComputeRewards.sol\":798:808  msg.sender */\n  caller\n    /* \"contract/ComputeRewards.sol\":774:784  _grantRole */\n  shl(0x20, tag_9)\n    /* \"contract/ComputeRewards.sol\":774:809  _grantRole(ORACLE_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n  pop\n    /* \"contract/ComputeRewards.sol\":617:817  constructor(address _rewardTokenAddress) {... */\n  pop\n    /* \"contract/ComputeRewards.sol\":245:1720  contract ComputeRewards is AccessControl, ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_42\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":932:1051   */\ntag_41:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_43\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_27\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract/ComputeRewards.sol\":245:1720  contract ComputeRewards is AccessControl, ReentrancyGuard {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xadd35db6d9cbb4a93083ce00f6da825d590d67feeb3a24ddce512c81a6f977f2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract/ComputeRewards.sol\":245:1720  contract ComputeRewards is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xbf83f51f\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbf83f51f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf854a27f\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07e2cea5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/ComputeRewards.sol\":433:475  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/ComputeRewards.sol\":362:424  bytes32 public constant ORACLE_ROLE = keccak256(\"ORACLE_ROLE\") */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/ComputeRewards.sol\":1223:1596  function claimReward() external nonReentrant {... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contract/ComputeRewards.sol\":825:1215  function allocateRewards(address[] calldata _users, uint256[] calldata _amounts) external onlyRole(ORACLE_ROLE) {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contract/ComputeRewards.sol\":310:345  IERC20 public immutable rewardToken */\n    tag_14:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/ComputeRewards.sol\":1604:1717  function availableRewards(address _user) external view returns (uint256) {... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_71\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":433:475  mapping(address => uint256) public rewards */\n    tag_27:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":362:424  bytes32 public constant ORACLE_ROLE = keccak256(\"ORACLE_ROLE\") */\n    tag_31:\n        /* \"contract/ComputeRewards.sol\":400:424  keccak256(\"ORACLE_ROLE\") */\n      0x68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1\n        /* \"contract/ComputeRewards.sol\":362:424  bytes32 public constant ORACLE_ROLE = keccak256(\"ORACLE_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_78\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_81\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_86\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_86:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":1223:1596  function claimReward() external nonReentrant {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_90:\n        /* \"contract/ComputeRewards.sol\":1279:1293  uint256 reward */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1296:1303  rewards */\n      0x02\n        /* \"contract/ComputeRewards.sol\":1296:1315  rewards[msg.sender] */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1304:1314  msg.sender */\n      caller\n        /* \"contract/ComputeRewards.sol\":1296:1315  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/ComputeRewards.sol\":1279:1315  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":1343:1344  0 */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1334:1340  reward */\n      dup2\n        /* \"contract/ComputeRewards.sol\":1334:1344  reward > 0 */\n      gt\n        /* \"contract/ComputeRewards.sol\":1326:1384  require(reward > 0, \"ComputeRewards: No rewards to claim\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contract/ComputeRewards.sol\":1427:1428  0 */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1405:1412  rewards */\n      0x02\n        /* \"contract/ComputeRewards.sol\":1405:1424  rewards[msg.sender] */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1413:1423  msg.sender */\n      caller\n        /* \"contract/ComputeRewards.sol\":1405:1424  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/ComputeRewards.sol\":1405:1428  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/ComputeRewards.sol\":1457:1468  rewardToken */\n      immutable(\"0xadd35db6d9cbb4a93083ce00f6da825d590d67feeb3a24ddce512c81a6f977f2\")\n        /* \"contract/ComputeRewards.sol\":1457:1477  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contract/ComputeRewards.sol\":1478:1488  msg.sender */\n      caller\n        /* \"contract/ComputeRewards.sol\":1490:1496  reward */\n      dup4\n        /* \"contract/ComputeRewards.sol\":1457:1497  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contract/ComputeRewards.sol\":1449:1539  require(rewardToken.transfer(msg.sender, reward), \"ComputeRewards: Token transfer failed\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contract/ComputeRewards.sol\":1569:1579  msg.sender */\n      caller\n        /* \"contract/ComputeRewards.sol\":1555:1588  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contract/ComputeRewards.sol\":1581:1587  reward */\n      dup3\n        /* \"contract/ComputeRewards.sol\":1555:1588  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/ComputeRewards.sol\":1268:1596  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_106\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_106:\n        /* \"contract/ComputeRewards.sol\":1223:1596  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":825:1215  function allocateRewards(address[] calldata _users, uint256[] calldata _amounts) external onlyRole(ORACLE_ROLE) {... */\n    tag_58:\n        /* \"contract/ComputeRewards.sol\":400:424  keccak256(\"ORACLE_ROLE\") */\n      0x68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_78\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_109:\n        /* \"contract/ComputeRewards.sol\":973:981  _amounts */\n      dup3\n      dup3\n        /* \"contract/ComputeRewards.sol\":973:988  _amounts.length */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":956:962  _users */\n      dup6\n      dup6\n        /* \"contract/ComputeRewards.sol\":956:969  _users.length */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":956:988  _users.length == _amounts.length */\n      eq\n        /* \"contract/ComputeRewards.sol\":948:1036  require(_users.length == _amounts.length, \"ComputeRewards: Input array length mismatch\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contract/ComputeRewards.sol\":1052:1058  uint i */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1061:1062  0 */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1052:1062  uint i = 0 */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":1047:1208  for (uint i = 0; i < _users.length; i++) {... */\n    tag_114:\n        /* \"contract/ComputeRewards.sol\":1068:1074  _users */\n      dup6\n      dup6\n        /* \"contract/ComputeRewards.sol\":1068:1081  _users.length */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":1064:1065  i */\n      dup2\n        /* \"contract/ComputeRewards.sol\":1064:1081  i < _users.length */\n      lt\n        /* \"contract/ComputeRewards.sol\":1047:1208  for (uint i = 0; i < _users.length; i++) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contract/ComputeRewards.sol\":1125:1133  _amounts */\n      dup4\n      dup4\n        /* \"contract/ComputeRewards.sol\":1134:1135  i */\n      dup3\n        /* \"contract/ComputeRewards.sol\":1125:1136  _amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n    tag_117:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contract/ComputeRewards.sol\":1103:1110  rewards */\n      0x02\n        /* \"contract/ComputeRewards.sol\":1103:1121  rewards[_users[i]] */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1111:1117  _users */\n      dup9\n      dup9\n        /* \"contract/ComputeRewards.sol\":1118:1119  i */\n      dup6\n        /* \"contract/ComputeRewards.sol\":1111:1120  _users[i] */\n      dup2\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_121\n      tag_119\n      jump\t// in\n    tag_121:\n    tag_120:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_122:\n        /* \"contract/ComputeRewards.sol\":1103:1121  rewards[_users[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/ComputeRewards.sol\":1103:1136  rewards[_users[i]] += _amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/ComputeRewards.sol\":1173:1179  _users */\n      dup6\n      dup6\n        /* \"contract/ComputeRewards.sol\":1180:1181  i */\n      dup3\n        /* \"contract/ComputeRewards.sol\":1173:1182  _users[i] */\n      dup2\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_126\n      tag_119\n      jump\t// in\n    tag_126:\n    tag_125:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_127:\n        /* \"contract/ComputeRewards.sol\":1156:1196  RewardsAllocated(_users[i], _amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x560ef4f9524af91c8f006852a8707c3f256c238779f8cc088bbe202bb82e632e\n        /* \"contract/ComputeRewards.sol\":1184:1192  _amounts */\n      dup6\n      dup6\n        /* \"contract/ComputeRewards.sol\":1193:1194  i */\n      dup5\n        /* \"contract/ComputeRewards.sol\":1184:1195  _amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_129\n      tag_119\n      jump\t// in\n    tag_129:\n    tag_128:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contract/ComputeRewards.sol\":1156:1196  RewardsAllocated(_users[i], _amounts[i]) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/ComputeRewards.sol\":1083:1086  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contract/ComputeRewards.sol\":1047:1208  for (uint i = 0; i < _users.length; i++) {... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"contract/ComputeRewards.sol\":825:1215  function allocateRewards(address[] calldata _users, uint256[] calldata _amounts) external onlyRole(ORACLE_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_78\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":310:345  IERC20 public immutable rewardToken */\n    tag_63:\n      immutable(\"0xadd35db6d9cbb4a93083ce00f6da825d590d67feeb3a24ddce512c81a6f977f2\")\n      dup2\n      jump\t// out\n        /* \"contract/ComputeRewards.sol\":1604:1717  function availableRewards(address _user) external view returns (uint256) {... */\n    tag_68:\n        /* \"contract/ComputeRewards.sol\":1668:1675  uint256 */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1695:1702  rewards */\n      0x02\n        /* \"contract/ComputeRewards.sol\":1695:1709  rewards[_user] */\n      0x00\n        /* \"contract/ComputeRewards.sol\":1703:1708  _user */\n      dup4\n        /* \"contract/ComputeRewards.sol\":1695:1709  rewards[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/ComputeRewards.sol\":1688:1709  return rewards[_user] */\n      swap1\n      pop\n        /* \"contract/ComputeRewards.sol\":1604:1717  function availableRewards(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_142)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_142:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_148)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_148:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_48\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_164:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_165:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_166:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_167:\n        /* \"#utility.yul\":561:584   */\n      tag_210\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_166\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_211:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_168:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_213\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_167\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_216\n      tag_164\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":833:952   */\n    tag_215:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_217\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_168\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_169:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_170:\n        /* \"#utility.yul\":1268:1289   */\n      tag_220\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_169\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_222\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_170\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_171:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_172:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_225\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_171\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_173:\n        /* \"#utility.yul\":1825:1849   */\n      tag_227\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_172\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      0x00\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_228:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_174:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_230\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_173\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_26:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_233\n      tag_164\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2101:2220   */\n    tag_232:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_234\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_174\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_175:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_176:\n        /* \"#utility.yul\":2530:2554   */\n      tag_237\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_175\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_29:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_239\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_176\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2872   */\n    tag_177:\n        /* \"#utility.yul\":2832:2839   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2850:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:2996   */\n    tag_178:\n        /* \"#utility.yul\":2965:2989   */\n      tag_242\n        /* \"#utility.yul\":2983:2988   */\n      dup2\n        /* \"#utility.yul\":2965:2989   */\n      tag_177\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2960:2963   */\n      dup3\n        /* \"#utility.yul\":2953:2990   */\n      mstore\n        /* \"#utility.yul\":2878:2996   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3002:3224   */\n    tag_33:\n        /* \"#utility.yul\":3095:3099   */\n      0x00\n        /* \"#utility.yul\":3133:3135   */\n      0x20\n        /* \"#utility.yul\":3122:3131   */\n      dup3\n        /* \"#utility.yul\":3118:3136   */\n      add\n        /* \"#utility.yul\":3110:3136   */\n      swap1\n      pop\n        /* \"#utility.yul\":3146:3217   */\n      tag_244\n        /* \"#utility.yul\":3214:3215   */\n      0x00\n        /* \"#utility.yul\":3203:3212   */\n      dup4\n        /* \"#utility.yul\":3199:3216   */\n      add\n        /* \"#utility.yul\":3190:3196   */\n      dup5\n        /* \"#utility.yul\":3146:3217   */\n      tag_178\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3002:3224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3352   */\n    tag_179:\n        /* \"#utility.yul\":3303:3327   */\n      tag_246\n        /* \"#utility.yul\":3321:3326   */\n      dup2\n        /* \"#utility.yul\":3303:3327   */\n      tag_177\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3296:3301   */\n      dup2\n        /* \"#utility.yul\":3293:3328   */\n      eq\n        /* \"#utility.yul\":3283:3346   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3283:3346   */\n    tag_247:\n        /* \"#utility.yul\":3230:3352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3497   */\n    tag_180:\n        /* \"#utility.yul\":3404:3409   */\n      0x00\n        /* \"#utility.yul\":3442:3448   */\n      dup2\n        /* \"#utility.yul\":3429:3449   */\n      calldataload\n        /* \"#utility.yul\":3420:3449   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3491   */\n      tag_249\n        /* \"#utility.yul\":3485:3490   */\n      dup2\n        /* \"#utility.yul\":3458:3491   */\n      tag_179\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3358:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3503:3832   */\n    tag_36:\n        /* \"#utility.yul\":3562:3568   */\n      0x00\n        /* \"#utility.yul\":3611:3613   */\n      0x20\n        /* \"#utility.yul\":3599:3608   */\n      dup3\n        /* \"#utility.yul\":3590:3597   */\n      dup5\n        /* \"#utility.yul\":3586:3609   */\n      sub\n        /* \"#utility.yul\":3582:3614   */\n      slt\n        /* \"#utility.yul\":3579:3698   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3617:3696   */\n      tag_252\n      tag_164\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3579:3698   */\n    tag_251:\n        /* \"#utility.yul\":3737:3738   */\n      0x00\n        /* \"#utility.yul\":3762:3815   */\n      tag_253\n        /* \"#utility.yul\":3807:3814   */\n      dup5\n        /* \"#utility.yul\":3798:3804   */\n      dup3\n        /* \"#utility.yul\":3787:3796   */\n      dup6\n        /* \"#utility.yul\":3783:3805   */\n      add\n        /* \"#utility.yul\":3762:3815   */\n      tag_180\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3752:3815   */\n      swap2\n      pop\n        /* \"#utility.yul\":3708:3825   */\n      pop\n        /* \"#utility.yul\":3503:3832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4312   */\n    tag_41:\n        /* \"#utility.yul\":3906:3912   */\n      0x00\n        /* \"#utility.yul\":3914:3920   */\n      0x00\n        /* \"#utility.yul\":3963:3965   */\n      0x40\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3942:3949   */\n      dup6\n        /* \"#utility.yul\":3938:3961   */\n      sub\n        /* \"#utility.yul\":3934:3966   */\n      slt\n        /* \"#utility.yul\":3931:4050   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3969:4048   */\n      tag_256\n      tag_164\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3931:4050   */\n    tag_255:\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4114:4167   */\n      tag_257\n        /* \"#utility.yul\":4159:4166   */\n      dup6\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4135:4157   */\n      add\n        /* \"#utility.yul\":4114:4167   */\n      tag_180\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4104:4167   */\n      swap3\n      pop\n        /* \"#utility.yul\":4060:4177   */\n      pop\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4242:4295   */\n      tag_258\n        /* \"#utility.yul\":4287:4294   */\n      dup6\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4267:4276   */\n      dup7\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4242:4295   */\n      tag_174\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4232:4295   */\n      swap2\n      pop\n        /* \"#utility.yul\":4187:4305   */\n      pop\n        /* \"#utility.yul\":3838:4312   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4318:4435   */\n    tag_181:\n        /* \"#utility.yul\":4427:4428   */\n      0x00\n        /* \"#utility.yul\":4424:4425   */\n      0x00\n        /* \"#utility.yul\":4417:4429   */\n      revert\n        /* \"#utility.yul\":4441:4558   */\n    tag_182:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4547:4548   */\n      0x00\n        /* \"#utility.yul\":4540:4552   */\n      revert\n        /* \"#utility.yul\":4564:4681   */\n    tag_183:\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4670:4671   */\n      0x00\n        /* \"#utility.yul\":4663:4675   */\n      revert\n        /* \"#utility.yul\":4704:5272   */\n    tag_184:\n        /* \"#utility.yul\":4777:4785   */\n      0x00\n        /* \"#utility.yul\":4787:4793   */\n      0x00\n        /* \"#utility.yul\":4837:4840   */\n      dup4\n        /* \"#utility.yul\":4830:4834   */\n      0x1f\n        /* \"#utility.yul\":4822:4828   */\n      dup5\n        /* \"#utility.yul\":4818:4835   */\n      add\n        /* \"#utility.yul\":4814:4841   */\n      slt\n        /* \"#utility.yul\":4804:4926   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4845:4924   */\n      tag_264\n      tag_181\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4804:4926   */\n    tag_263:\n        /* \"#utility.yul\":4958:4964   */\n      dup3\n        /* \"#utility.yul\":4945:4965   */\n      calldataload\n        /* \"#utility.yul\":4935:4965   */\n      swap1\n      pop\n        /* \"#utility.yul\":4988:5006   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4980:4986   */\n      dup2\n        /* \"#utility.yul\":4977:5007   */\n      gt\n        /* \"#utility.yul\":4974:5091   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5010:5089   */\n      tag_266\n      tag_182\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4974:5091   */\n    tag_265:\n        /* \"#utility.yul\":5124:5128   */\n      0x20\n        /* \"#utility.yul\":5116:5122   */\n      dup4\n        /* \"#utility.yul\":5112:5129   */\n      add\n        /* \"#utility.yul\":5100:5129   */\n      swap2\n      pop\n        /* \"#utility.yul\":5178:5181   */\n      dup4\n        /* \"#utility.yul\":5170:5174   */\n      0x20\n        /* \"#utility.yul\":5162:5168   */\n      dup3\n        /* \"#utility.yul\":5158:5175   */\n      mul\n        /* \"#utility.yul\":5148:5156   */\n      dup4\n        /* \"#utility.yul\":5144:5176   */\n      add\n        /* \"#utility.yul\":5141:5182   */\n      gt\n        /* \"#utility.yul\":5138:5266   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5185:5264   */\n      tag_268\n      tag_183\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5138:5266   */\n    tag_267:\n        /* \"#utility.yul\":4704:5272   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5295:5863   */\n    tag_185:\n        /* \"#utility.yul\":5368:5376   */\n      0x00\n        /* \"#utility.yul\":5378:5384   */\n      0x00\n        /* \"#utility.yul\":5428:5431   */\n      dup4\n        /* \"#utility.yul\":5421:5425   */\n      0x1f\n        /* \"#utility.yul\":5413:5419   */\n      dup5\n        /* \"#utility.yul\":5409:5426   */\n      add\n        /* \"#utility.yul\":5405:5432   */\n      slt\n        /* \"#utility.yul\":5395:5517   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5436:5515   */\n      tag_271\n      tag_181\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5395:5517   */\n    tag_270:\n        /* \"#utility.yul\":5549:5555   */\n      dup3\n        /* \"#utility.yul\":5536:5556   */\n      calldataload\n        /* \"#utility.yul\":5526:5556   */\n      swap1\n      pop\n        /* \"#utility.yul\":5579:5597   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5571:5577   */\n      dup2\n        /* \"#utility.yul\":5568:5598   */\n      gt\n        /* \"#utility.yul\":5565:5682   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5601:5680   */\n      tag_273\n      tag_182\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5565:5682   */\n    tag_272:\n        /* \"#utility.yul\":5715:5719   */\n      0x20\n        /* \"#utility.yul\":5707:5713   */\n      dup4\n        /* \"#utility.yul\":5703:5720   */\n      add\n        /* \"#utility.yul\":5691:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5769:5772   */\n      dup4\n        /* \"#utility.yul\":5761:5765   */\n      0x20\n        /* \"#utility.yul\":5753:5759   */\n      dup3\n        /* \"#utility.yul\":5749:5766   */\n      mul\n        /* \"#utility.yul\":5739:5747   */\n      dup4\n        /* \"#utility.yul\":5735:5767   */\n      add\n        /* \"#utility.yul\":5732:5773   */\n      gt\n        /* \"#utility.yul\":5729:5857   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":5776:5855   */\n      tag_275\n      tag_183\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5729:5857   */\n    tag_274:\n        /* \"#utility.yul\":5295:5863   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5869:6803   */\n    tag_57:\n        /* \"#utility.yul\":5991:5997   */\n      0x00\n        /* \"#utility.yul\":5999:6005   */\n      0x00\n        /* \"#utility.yul\":6007:6013   */\n      0x00\n        /* \"#utility.yul\":6015:6021   */\n      0x00\n        /* \"#utility.yul\":6064:6066   */\n      0x40\n        /* \"#utility.yul\":6052:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6050   */\n      dup8\n        /* \"#utility.yul\":6039:6062   */\n      sub\n        /* \"#utility.yul\":6035:6067   */\n      slt\n        /* \"#utility.yul\":6032:6151   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6070:6149   */\n      tag_278\n      tag_164\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6032:6151   */\n    tag_277:\n        /* \"#utility.yul\":6218:6219   */\n      0x00\n        /* \"#utility.yul\":6207:6216   */\n      dup6\n        /* \"#utility.yul\":6203:6220   */\n      add\n        /* \"#utility.yul\":6190:6221   */\n      calldataload\n        /* \"#utility.yul\":6248:6266   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6240:6246   */\n      dup2\n        /* \"#utility.yul\":6237:6267   */\n      gt\n        /* \"#utility.yul\":6234:6351   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6270:6349   */\n      tag_280\n      tag_165\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6234:6351   */\n    tag_279:\n        /* \"#utility.yul\":6383:6463   */\n      tag_281\n        /* \"#utility.yul\":6455:6462   */\n      dup8\n        /* \"#utility.yul\":6446:6452   */\n      dup3\n        /* \"#utility.yul\":6435:6444   */\n      dup9\n        /* \"#utility.yul\":6431:6453   */\n      add\n        /* \"#utility.yul\":6383:6463   */\n      tag_184\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6365:6463   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":6161:6473   */\n      pop\n        /* \"#utility.yul\":6540:6542   */\n      0x20\n        /* \"#utility.yul\":6529:6538   */\n      dup6\n        /* \"#utility.yul\":6525:6543   */\n      add\n        /* \"#utility.yul\":6512:6544   */\n      calldataload\n        /* \"#utility.yul\":6571:6589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6563:6569   */\n      dup2\n        /* \"#utility.yul\":6560:6590   */\n      gt\n        /* \"#utility.yul\":6557:6674   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6593:6672   */\n      tag_283\n      tag_165\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6557:6674   */\n    tag_282:\n        /* \"#utility.yul\":6706:6786   */\n      tag_284\n        /* \"#utility.yul\":6778:6785   */\n      dup8\n        /* \"#utility.yul\":6769:6775   */\n      dup3\n        /* \"#utility.yul\":6758:6767   */\n      dup9\n        /* \"#utility.yul\":6754:6776   */\n      add\n        /* \"#utility.yul\":6706:6786   */\n      tag_185\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6688:6786   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6483:6796   */\n      pop\n        /* \"#utility.yul\":5869:6803   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6809:6869   */\n    tag_186:\n        /* \"#utility.yul\":6837:6840   */\n      0x00\n        /* \"#utility.yul\":6858:6863   */\n      dup2\n        /* \"#utility.yul\":6851:6863   */\n      swap1\n      pop\n        /* \"#utility.yul\":6809:6869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6875:7017   */\n    tag_187:\n        /* \"#utility.yul\":6925:6934   */\n      0x00\n        /* \"#utility.yul\":6958:7011   */\n      tag_287\n        /* \"#utility.yul\":6976:7010   */\n      tag_288\n        /* \"#utility.yul\":6985:7009   */\n      tag_289\n        /* \"#utility.yul\":7003:7008   */\n      dup5\n        /* \"#utility.yul\":6985:7009   */\n      tag_171\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6976:7010   */\n      tag_186\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6958:7011   */\n      tag_171\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6945:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6875:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7149   */\n    tag_188:\n        /* \"#utility.yul\":7073:7082   */\n      0x00\n        /* \"#utility.yul\":7106:7143   */\n      tag_291\n        /* \"#utility.yul\":7137:7142   */\n      dup3\n        /* \"#utility.yul\":7106:7143   */\n      tag_187\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7093:7143   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7155:7295   */\n    tag_189:\n        /* \"#utility.yul\":7219:7228   */\n      0x00\n        /* \"#utility.yul\":7252:7289   */\n      tag_293\n        /* \"#utility.yul\":7283:7288   */\n      dup3\n        /* \"#utility.yul\":7252:7289   */\n      tag_188\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7239:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7155:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7460   */\n    tag_190:\n        /* \"#utility.yul\":7402:7453   */\n      tag_295\n        /* \"#utility.yul\":7447:7452   */\n      dup2\n        /* \"#utility.yul\":7402:7453   */\n      tag_189\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7397:7400   */\n      dup3\n        /* \"#utility.yul\":7390:7454   */\n      mstore\n        /* \"#utility.yul\":7301:7460   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7466:7716   */\n    tag_65:\n        /* \"#utility.yul\":7573:7577   */\n      0x00\n        /* \"#utility.yul\":7611:7613   */\n      0x20\n        /* \"#utility.yul\":7600:7609   */\n      dup3\n        /* \"#utility.yul\":7596:7614   */\n      add\n        /* \"#utility.yul\":7588:7614   */\n      swap1\n      pop\n        /* \"#utility.yul\":7624:7709   */\n      tag_297\n        /* \"#utility.yul\":7706:7707   */\n      0x00\n        /* \"#utility.yul\":7695:7704   */\n      dup4\n        /* \"#utility.yul\":7691:7708   */\n      add\n        /* \"#utility.yul\":7682:7688   */\n      dup5\n        /* \"#utility.yul\":7624:7709   */\n      tag_190\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7466:7716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7722:7891   */\n    tag_191:\n        /* \"#utility.yul\":7806:7817   */\n      0x00\n        /* \"#utility.yul\":7840:7846   */\n      dup3\n        /* \"#utility.yul\":7835:7838   */\n      dup3\n        /* \"#utility.yul\":7828:7847   */\n      mstore\n        /* \"#utility.yul\":7880:7884   */\n      0x20\n        /* \"#utility.yul\":7875:7878   */\n      dup3\n        /* \"#utility.yul\":7871:7885   */\n      add\n        /* \"#utility.yul\":7856:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7722:7891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7897:8119   */\n    tag_192:\n        /* \"#utility.yul\":8037:8071   */\n      0x436f6d70757465526577617264733a204e6f207265776172647320746f20636c\n        /* \"#utility.yul\":8033:8034   */\n      0x00\n        /* \"#utility.yul\":8025:8031   */\n      dup3\n        /* \"#utility.yul\":8021:8035   */\n      add\n        /* \"#utility.yul\":8014:8072   */\n      mstore\n        /* \"#utility.yul\":8106:8111   */\n      0x61696d0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8101:8103   */\n      0x20\n        /* \"#utility.yul\":8093:8099   */\n      dup3\n        /* \"#utility.yul\":8089:8104   */\n      add\n        /* \"#utility.yul\":8082:8112   */\n      mstore\n        /* \"#utility.yul\":7897:8119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8125:8491   */\n    tag_193:\n        /* \"#utility.yul\":8267:8270   */\n      0x00\n        /* \"#utility.yul\":8288:8355   */\n      tag_301\n        /* \"#utility.yul\":8352:8354   */\n      0x23\n        /* \"#utility.yul\":8347:8350   */\n      dup4\n        /* \"#utility.yul\":8288:8355   */\n      tag_191\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8281:8355   */\n      swap2\n      pop\n        /* \"#utility.yul\":8364:8457   */\n      tag_302\n        /* \"#utility.yul\":8453:8456   */\n      dup3\n        /* \"#utility.yul\":8364:8457   */\n      tag_192\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8482:8484   */\n      0x40\n        /* \"#utility.yul\":8477:8480   */\n      dup3\n        /* \"#utility.yul\":8473:8485   */\n      add\n        /* \"#utility.yul\":8466:8485   */\n      swap1\n      pop\n        /* \"#utility.yul\":8125:8491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8497:8916   */\n    tag_95:\n        /* \"#utility.yul\":8663:8667   */\n      0x00\n        /* \"#utility.yul\":8701:8703   */\n      0x20\n        /* \"#utility.yul\":8690:8699   */\n      dup3\n        /* \"#utility.yul\":8686:8704   */\n      add\n        /* \"#utility.yul\":8678:8704   */\n      swap1\n      pop\n        /* \"#utility.yul\":8750:8759   */\n      dup2\n        /* \"#utility.yul\":8744:8748   */\n      dup2\n        /* \"#utility.yul\":8740:8760   */\n      sub\n        /* \"#utility.yul\":8736:8737   */\n      0x00\n        /* \"#utility.yul\":8725:8734   */\n      dup4\n        /* \"#utility.yul\":8721:8738   */\n      add\n        /* \"#utility.yul\":8714:8761   */\n      mstore\n        /* \"#utility.yul\":8778:8909   */\n      tag_304\n        /* \"#utility.yul\":8904:8908   */\n      dup2\n        /* \"#utility.yul\":8778:8909   */\n      tag_193\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8770:8909   */\n      swap1\n      pop\n        /* \"#utility.yul\":8497:8916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8922:9040   */\n    tag_194:\n        /* \"#utility.yul\":9009:9033   */\n      tag_306\n        /* \"#utility.yul\":9027:9032   */\n      dup2\n        /* \"#utility.yul\":9009:9033   */\n      tag_172\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9004:9007   */\n      dup3\n        /* \"#utility.yul\":8997:9034   */\n      mstore\n        /* \"#utility.yul\":8922:9040   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9378   */\n    tag_97:\n        /* \"#utility.yul\":9167:9171   */\n      0x00\n        /* \"#utility.yul\":9205:9207   */\n      0x40\n        /* \"#utility.yul\":9194:9203   */\n      dup3\n        /* \"#utility.yul\":9190:9208   */\n      add\n        /* \"#utility.yul\":9182:9208   */\n      swap1\n      pop\n        /* \"#utility.yul\":9218:9289   */\n      tag_308\n        /* \"#utility.yul\":9286:9287   */\n      0x00\n        /* \"#utility.yul\":9275:9284   */\n      dup4\n        /* \"#utility.yul\":9271:9288   */\n      add\n        /* \"#utility.yul\":9262:9268   */\n      dup6\n        /* \"#utility.yul\":9218:9289   */\n      tag_194\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9299:9371   */\n      tag_309\n        /* \"#utility.yul\":9367:9369   */\n      0x20\n        /* \"#utility.yul\":9356:9365   */\n      dup4\n        /* \"#utility.yul\":9352:9370   */\n      add\n        /* \"#utility.yul\":9343:9349   */\n      dup5\n        /* \"#utility.yul\":9299:9371   */\n      tag_176\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9046:9378   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9384:9500   */\n    tag_195:\n        /* \"#utility.yul\":9454:9475   */\n      tag_311\n        /* \"#utility.yul\":9469:9474   */\n      dup2\n        /* \"#utility.yul\":9454:9475   */\n      tag_169\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9447:9452   */\n      dup2\n        /* \"#utility.yul\":9444:9476   */\n      eq\n        /* \"#utility.yul\":9434:9494   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9487:9488   */\n      0x00\n        /* \"#utility.yul\":9480:9492   */\n      revert\n        /* \"#utility.yul\":9434:9494   */\n    tag_312:\n        /* \"#utility.yul\":9384:9500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9643   */\n    tag_196:\n        /* \"#utility.yul\":9560:9565   */\n      0x00\n        /* \"#utility.yul\":9591:9597   */\n      dup2\n        /* \"#utility.yul\":9585:9598   */\n      mload\n        /* \"#utility.yul\":9576:9598   */\n      swap1\n      pop\n        /* \"#utility.yul\":9607:9637   */\n      tag_314\n        /* \"#utility.yul\":9631:9636   */\n      dup2\n        /* \"#utility.yul\":9607:9637   */\n      tag_195\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9506:9643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9649:9994   */\n    tag_101:\n        /* \"#utility.yul\":9716:9722   */\n      0x00\n        /* \"#utility.yul\":9765:9767   */\n      0x20\n        /* \"#utility.yul\":9753:9762   */\n      dup3\n        /* \"#utility.yul\":9744:9751   */\n      dup5\n        /* \"#utility.yul\":9740:9763   */\n      sub\n        /* \"#utility.yul\":9736:9768   */\n      slt\n        /* \"#utility.yul\":9733:9852   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":9771:9850   */\n      tag_317\n      tag_164\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9733:9852   */\n    tag_316:\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9916:9977   */\n      tag_318\n        /* \"#utility.yul\":9969:9976   */\n      dup5\n        /* \"#utility.yul\":9960:9966   */\n      dup3\n        /* \"#utility.yul\":9949:9958   */\n      dup6\n        /* \"#utility.yul\":9945:9967   */\n      add\n        /* \"#utility.yul\":9916:9977   */\n      tag_196\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9906:9977   */\n      swap2\n      pop\n        /* \"#utility.yul\":9862:9987   */\n      pop\n        /* \"#utility.yul\":9649:9994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10000:10224   */\n    tag_197:\n        /* \"#utility.yul\":10140:10174   */\n      0x436f6d70757465526577617264733a20546f6b656e207472616e736665722066\n        /* \"#utility.yul\":10136:10137   */\n      0x00\n        /* \"#utility.yul\":10128:10134   */\n      dup3\n        /* \"#utility.yul\":10124:10138   */\n      add\n        /* \"#utility.yul\":10117:10175   */\n      mstore\n        /* \"#utility.yul\":10209:10216   */\n      0x61696c6564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10196:10202   */\n      dup3\n        /* \"#utility.yul\":10192:10207   */\n      add\n        /* \"#utility.yul\":10185:10217   */\n      mstore\n        /* \"#utility.yul\":10000:10224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10230:10596   */\n    tag_198:\n        /* \"#utility.yul\":10372:10375   */\n      0x00\n        /* \"#utility.yul\":10393:10460   */\n      tag_321\n        /* \"#utility.yul\":10457:10459   */\n      0x25\n        /* \"#utility.yul\":10452:10455   */\n      dup4\n        /* \"#utility.yul\":10393:10460   */\n      tag_191\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10386:10460   */\n      swap2\n      pop\n        /* \"#utility.yul\":10469:10562   */\n      tag_322\n        /* \"#utility.yul\":10558:10561   */\n      dup3\n        /* \"#utility.yul\":10469:10562   */\n      tag_197\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10587:10589   */\n      0x40\n        /* \"#utility.yul\":10582:10585   */\n      dup3\n        /* \"#utility.yul\":10578:10590   */\n      add\n        /* \"#utility.yul\":10571:10590   */\n      swap1\n      pop\n        /* \"#utility.yul\":10230:10596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10602:11021   */\n    tag_104:\n        /* \"#utility.yul\":10768:10772   */\n      0x00\n        /* \"#utility.yul\":10806:10808   */\n      0x20\n        /* \"#utility.yul\":10795:10804   */\n      dup3\n        /* \"#utility.yul\":10791:10809   */\n      add\n        /* \"#utility.yul\":10783:10809   */\n      swap1\n      pop\n        /* \"#utility.yul\":10855:10864   */\n      dup2\n        /* \"#utility.yul\":10849:10853   */\n      dup2\n        /* \"#utility.yul\":10845:10865   */\n      sub\n        /* \"#utility.yul\":10841:10842   */\n      0x00\n        /* \"#utility.yul\":10830:10839   */\n      dup4\n        /* \"#utility.yul\":10826:10843   */\n      add\n        /* \"#utility.yul\":10819:10866   */\n      mstore\n        /* \"#utility.yul\":10883:11014   */\n      tag_324\n        /* \"#utility.yul\":11009:11013   */\n      dup2\n        /* \"#utility.yul\":10883:11014   */\n      tag_198\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10875:11014   */\n      swap1\n      pop\n        /* \"#utility.yul\":10602:11021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11027:11257   */\n    tag_199:\n        /* \"#utility.yul\":11167:11201   */\n      0x436f6d70757465526577617264733a20496e707574206172726179206c656e67\n        /* \"#utility.yul\":11163:11164   */\n      0x00\n        /* \"#utility.yul\":11155:11161   */\n      dup3\n        /* \"#utility.yul\":11151:11165   */\n      add\n        /* \"#utility.yul\":11144:11202   */\n      mstore\n        /* \"#utility.yul\":11236:11249   */\n      0x7468206d69736d61746368000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11231:11233   */\n      0x20\n        /* \"#utility.yul\":11223:11229   */\n      dup3\n        /* \"#utility.yul\":11219:11234   */\n      add\n        /* \"#utility.yul\":11212:11250   */\n      mstore\n        /* \"#utility.yul\":11027:11257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11263:11629   */\n    tag_200:\n        /* \"#utility.yul\":11405:11408   */\n      0x00\n        /* \"#utility.yul\":11426:11493   */\n      tag_327\n        /* \"#utility.yul\":11490:11492   */\n      0x2b\n        /* \"#utility.yul\":11485:11488   */\n      dup4\n        /* \"#utility.yul\":11426:11493   */\n      tag_191\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":11419:11493   */\n      swap2\n      pop\n        /* \"#utility.yul\":11502:11595   */\n      tag_328\n        /* \"#utility.yul\":11591:11594   */\n      dup3\n        /* \"#utility.yul\":11502:11595   */\n      tag_199\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11620:11622   */\n      0x40\n        /* \"#utility.yul\":11615:11618   */\n      dup3\n        /* \"#utility.yul\":11611:11623   */\n      add\n        /* \"#utility.yul\":11604:11623   */\n      swap1\n      pop\n        /* \"#utility.yul\":11263:11629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11635:12054   */\n    tag_113:\n        /* \"#utility.yul\":11801:11805   */\n      0x00\n        /* \"#utility.yul\":11839:11841   */\n      0x20\n        /* \"#utility.yul\":11828:11837   */\n      dup3\n        /* \"#utility.yul\":11824:11842   */\n      add\n        /* \"#utility.yul\":11816:11842   */\n      swap1\n      pop\n        /* \"#utility.yul\":11888:11897   */\n      dup2\n        /* \"#utility.yul\":11882:11886   */\n      dup2\n        /* \"#utility.yul\":11878:11898   */\n      sub\n        /* \"#utility.yul\":11874:11875   */\n      0x00\n        /* \"#utility.yul\":11863:11872   */\n      dup4\n        /* \"#utility.yul\":11859:11876   */\n      add\n        /* \"#utility.yul\":11852:11899   */\n      mstore\n        /* \"#utility.yul\":11916:12047   */\n      tag_330\n        /* \"#utility.yul\":12042:12046   */\n      dup2\n        /* \"#utility.yul\":11916:12047   */\n      tag_200\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11908:12047   */\n      swap1\n      pop\n        /* \"#utility.yul\":11635:12054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12060:12240   */\n    tag_119:\n        /* \"#utility.yul\":12108:12185   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12105:12106   */\n      0x00\n        /* \"#utility.yul\":12098:12186   */\n      mstore\n        /* \"#utility.yul\":12205:12209   */\n      0x32\n        /* \"#utility.yul\":12202:12203   */\n      0x04\n        /* \"#utility.yul\":12195:12210   */\n      mstore\n        /* \"#utility.yul\":12229:12233   */\n      0x24\n        /* \"#utility.yul\":12226:12227   */\n      0x00\n        /* \"#utility.yul\":12219:12234   */\n      revert\n        /* \"#utility.yul\":12246:12426   */\n    tag_201:\n        /* \"#utility.yul\":12294:12371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12291:12292   */\n      0x00\n        /* \"#utility.yul\":12284:12372   */\n      mstore\n        /* \"#utility.yul\":12391:12395   */\n      0x11\n        /* \"#utility.yul\":12388:12389   */\n      0x04\n        /* \"#utility.yul\":12381:12396   */\n      mstore\n        /* \"#utility.yul\":12415:12419   */\n      0x24\n        /* \"#utility.yul\":12412:12413   */\n      0x00\n        /* \"#utility.yul\":12405:12420   */\n      revert\n        /* \"#utility.yul\":12432:12623   */\n    tag_124:\n        /* \"#utility.yul\":12472:12475   */\n      0x00\n        /* \"#utility.yul\":12491:12511   */\n      tag_334\n        /* \"#utility.yul\":12509:12510   */\n      dup3\n        /* \"#utility.yul\":12491:12511   */\n      tag_175\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12486:12511   */\n      swap2\n      pop\n        /* \"#utility.yul\":12525:12545   */\n      tag_335\n        /* \"#utility.yul\":12543:12544   */\n      dup4\n        /* \"#utility.yul\":12525:12545   */\n      tag_175\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12520:12545   */\n      swap3\n      pop\n        /* \"#utility.yul\":12568:12569   */\n      dup3\n        /* \"#utility.yul\":12565:12566   */\n      dup3\n        /* \"#utility.yul\":12561:12570   */\n      add\n        /* \"#utility.yul\":12554:12570   */\n      swap1\n      pop\n        /* \"#utility.yul\":12589:12592   */\n      dup1\n        /* \"#utility.yul\":12586:12587   */\n      dup3\n        /* \"#utility.yul\":12583:12593   */\n      gt\n        /* \"#utility.yul\":12580:12616   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":12596:12614   */\n      tag_337\n      tag_201\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":12580:12616   */\n    tag_336:\n        /* \"#utility.yul\":12432:12623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12629:12810   */\n    tag_202:\n        /* \"#utility.yul\":12769:12802   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12765:12766   */\n      0x00\n        /* \"#utility.yul\":12757:12763   */\n      dup3\n        /* \"#utility.yul\":12753:12767   */\n      add\n        /* \"#utility.yul\":12746:12803   */\n      mstore\n        /* \"#utility.yul\":12629:12810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12816:13182   */\n    tag_203:\n        /* \"#utility.yul\":12958:12961   */\n      0x00\n        /* \"#utility.yul\":12979:13046   */\n      tag_340\n        /* \"#utility.yul\":13043:13045   */\n      0x1f\n        /* \"#utility.yul\":13038:13041   */\n      dup4\n        /* \"#utility.yul\":12979:13046   */\n      tag_191\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12972:13046   */\n      swap2\n      pop\n        /* \"#utility.yul\":13055:13148   */\n      tag_341\n        /* \"#utility.yul\":13144:13147   */\n      dup3\n        /* \"#utility.yul\":13055:13148   */\n      tag_202\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13173:13175   */\n      0x20\n        /* \"#utility.yul\":13168:13171   */\n      dup3\n        /* \"#utility.yul\":13164:13176   */\n      add\n        /* \"#utility.yul\":13157:13176   */\n      swap1\n      pop\n        /* \"#utility.yul\":12816:13182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13188:13607   */\n    tag_156:\n        /* \"#utility.yul\":13354:13358   */\n      0x00\n        /* \"#utility.yul\":13392:13394   */\n      0x20\n        /* \"#utility.yul\":13381:13390   */\n      dup3\n        /* \"#utility.yul\":13377:13395   */\n      add\n        /* \"#utility.yul\":13369:13395   */\n      swap1\n      pop\n        /* \"#utility.yul\":13441:13450   */\n      dup2\n        /* \"#utility.yul\":13435:13439   */\n      dup2\n        /* \"#utility.yul\":13431:13451   */\n      sub\n        /* \"#utility.yul\":13427:13428   */\n      0x00\n        /* \"#utility.yul\":13416:13425   */\n      dup4\n        /* \"#utility.yul\":13412:13429   */\n      add\n        /* \"#utility.yul\":13405:13452   */\n      mstore\n        /* \"#utility.yul\":13469:13600   */\n      tag_343\n        /* \"#utility.yul\":13595:13599   */\n      dup2\n        /* \"#utility.yul\":13469:13600   */\n      tag_203\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":13461:13600   */\n      swap1\n      pop\n        /* \"#utility.yul\":13188:13607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13613:13945   */\n    tag_162:\n        /* \"#utility.yul\":13734:13738   */\n      0x00\n        /* \"#utility.yul\":13772:13774   */\n      0x40\n        /* \"#utility.yul\":13761:13770   */\n      dup3\n        /* \"#utility.yul\":13757:13775   */\n      add\n        /* \"#utility.yul\":13749:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13785:13856   */\n      tag_345\n        /* \"#utility.yul\":13853:13854   */\n      0x00\n        /* \"#utility.yul\":13842:13851   */\n      dup4\n        /* \"#utility.yul\":13838:13855   */\n      add\n        /* \"#utility.yul\":13829:13835   */\n      dup6\n        /* \"#utility.yul\":13785:13856   */\n      tag_194\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":13866:13938   */\n      tag_346\n        /* \"#utility.yul\":13934:13936   */\n      0x20\n        /* \"#utility.yul\":13923:13932   */\n      dup4\n        /* \"#utility.yul\":13919:13937   */\n      add\n        /* \"#utility.yul\":13910:13916   */\n      dup5\n        /* \"#utility.yul\":13866:13938   */\n      tag_178\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":13613:13945   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b8b842027f78ad89ae9e4a02fef229f1fda4b8982435982c67120fc5dc278be364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_645": {
									"entryPoint": null,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 182,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_534": {
									"entryPoint": 526,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 427,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:8",
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b506040516115dd3803806115dd83398181016040528101906100319190610273565b600180819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505061007e5f5f1b336100b660201b60201c565b506100af7f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1336100b660201b60201c565b505061029e565b5f6100c783836101ab60201b60201c565b6101a15760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061013e61020e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101a5565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024282610219565b9050919050565b61025281610238565b811461025c575f5ffd5b50565b5f8151905061026d81610249565b92915050565b5f6020828403121561028857610287610215565b5b5f6102958482850161025f565b91505092915050565b6080516113206102bd5f395f8181610538015261084501526113205ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c806391d148541161008a578063bf83f51f11610064578063bf83f51f1461020f578063d547741f1461022b578063f7c618c114610247578063f854a27f14610265576100cd565b806391d14854146101b7578063a217fddf146101e7578063b88a802f14610205576100cd565b806301ffc9a7146100d15780630700037d1461010157806307e2cea514610131578063248a9ca31461014f5780632f2ff15d1461017f57806336568abe1461019b575b5f5ffd5b6100eb60048036038101906100e69190610c09565b610295565b6040516100f89190610c4e565b60405180910390f35b61011b60048036038101906101169190610cc1565b61030e565b6040516101289190610d04565b60405180910390f35b610139610323565b6040516101469190610d35565b60405180910390f35b61016960048036038101906101649190610d78565b610347565b6040516101769190610d35565b60405180910390f35b61019960048036038101906101949190610da3565b610363565b005b6101b560048036038101906101b09190610da3565b610385565b005b6101d160048036038101906101cc9190610da3565b610400565b6040516101de9190610c4e565b60405180910390f35b6101ef610463565b6040516101fc9190610d35565b60405180910390f35b61020d610469565b005b61022960048036038101906102249190610e97565b610669565b005b61024560048036038101906102409190610da3565b610821565b005b61024f610843565b60405161025c9190610f70565b60405180910390f35b61027f600480360381019061027a9190610cc1565b610867565b60405161028c9190610d04565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103075750610306826108ad565b5b9050919050565b6002602052805f5260405f205f915090505481565b7f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef181565b5f5f5f8381526020019081526020015f20600101549050919050565b61036c82610347565b61037581610916565b61037f838361092a565b50505050565b61038d610a13565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fb8282610a1a565b505050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b610471610b03565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90611009565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610591929190611036565b6020604051808303815f875af11580156105ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d19190611087565b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611122565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516106569190610d04565b60405180910390a250610667610b52565b565b7f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef161069381610916565b8282905085859050146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d2906111b0565b60405180910390fd5b5f5f90505b85859050811015610819578383828181106106fe576106fd6111ce565b5b9050602002013560025f88888581811061071b5761071a6111ce565b5b90506020020160208101906107309190610cc1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107779190611228565b92505081905550858582818110610791576107906111ce565b5b90506020020160208101906107a69190610cc1565b73ffffffffffffffffffffffffffffffffffffffff167f560ef4f9524af91c8f006852a8707c3f256c238779f8cc088bbe202bb82e632e8585848181106107f0576107ef6111ce565b5b905060200201356040516108049190610d04565b60405180910390a280806001019150506106e0565b505050505050565b61082a82610347565b61083381610916565b61083d8383610a1a565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61092781610922610a13565b610b5b565b50565b5f6109358383610400565b610a095760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109a6610a13565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610a0d565b5f90505b92915050565b5f33905090565b5f610a258383610400565b15610af9575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a96610a13565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610afd565b5f90505b92915050565b600260015403610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f906112a5565b60405180910390fd5b6002600181905550565b60018081905550565b610b658282610400565b610ba85780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b9f9291906112c3565b60405180910390fd5b5050565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610be881610bb4565b8114610bf2575f5ffd5b50565b5f81359050610c0381610bdf565b92915050565b5f60208284031215610c1e57610c1d610bac565b5b5f610c2b84828501610bf5565b91505092915050565b5f8115159050919050565b610c4881610c34565b82525050565b5f602082019050610c615f830184610c3f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c9082610c67565b9050919050565b610ca081610c86565b8114610caa575f5ffd5b50565b5f81359050610cbb81610c97565b92915050565b5f60208284031215610cd657610cd5610bac565b5b5f610ce384828501610cad565b91505092915050565b5f819050919050565b610cfe81610cec565b82525050565b5f602082019050610d175f830184610cf5565b92915050565b5f819050919050565b610d2f81610d1d565b82525050565b5f602082019050610d485f830184610d26565b92915050565b610d5781610d1d565b8114610d61575f5ffd5b50565b5f81359050610d7281610d4e565b92915050565b5f60208284031215610d8d57610d8c610bac565b5b5f610d9a84828501610d64565b91505092915050565b5f5f60408385031215610db957610db8610bac565b5b5f610dc685828601610d64565b9250506020610dd785828601610cad565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610e0257610e01610de1565b5b8235905067ffffffffffffffff811115610e1f57610e1e610de5565b5b602083019150836020820283011115610e3b57610e3a610de9565b5b9250929050565b5f5f83601f840112610e5757610e56610de1565b5b8235905067ffffffffffffffff811115610e7457610e73610de5565b5b602083019150836020820283011115610e9057610e8f610de9565b5b9250929050565b5f5f5f5f60408587031215610eaf57610eae610bac565b5b5f85013567ffffffffffffffff811115610ecc57610ecb610bb0565b5b610ed887828801610ded565b9450945050602085013567ffffffffffffffff811115610efb57610efa610bb0565b5b610f0787828801610e42565b925092505092959194509250565b5f819050919050565b5f610f38610f33610f2e84610c67565b610f15565b610c67565b9050919050565b5f610f4982610f1e565b9050919050565b5f610f5a82610f3f565b9050919050565b610f6a81610f50565b82525050565b5f602082019050610f835f830184610f61565b92915050565b5f82825260208201905092915050565b7f436f6d70757465526577617264733a204e6f207265776172647320746f20636c5f8201527f61696d0000000000000000000000000000000000000000000000000000000000602082015250565b5f610ff3602383610f89565b9150610ffe82610f99565b604082019050919050565b5f6020820190508181035f83015261102081610fe7565b9050919050565b61103081610c86565b82525050565b5f6040820190506110495f830185611027565b6110566020830184610cf5565b9392505050565b61106681610c34565b8114611070575f5ffd5b50565b5f815190506110818161105d565b92915050565b5f6020828403121561109c5761109b610bac565b5b5f6110a984828501611073565b91505092915050565b7f436f6d70757465526577617264733a20546f6b656e207472616e7366657220665f8201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b5f61110c602583610f89565b9150611117826110b2565b604082019050919050565b5f6020820190508181035f83015261113981611100565b9050919050565b7f436f6d70757465526577617264733a20496e707574206172726179206c656e675f8201527f7468206d69736d61746368000000000000000000000000000000000000000000602082015250565b5f61119a602b83610f89565b91506111a582611140565b604082019050919050565b5f6020820190508181035f8301526111c78161118e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123282610cec565b915061123d83610cec565b9250828201905080821115611255576112546111fb565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61128f601f83610f89565b915061129a8261125b565b602082019050919050565b5f6020820190508181035f8301526112bc81611283565b9050919050565b5f6040820190506112d65f830185611027565b6112e36020830184610d26565b939250505056fea2646970667358221220b8b842027f78ad89ae9e4a02fef229f1fda4b8982435982c67120fc5dc278be364736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15DD CODESIZE SUB DUP1 PUSH2 0x15DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x7E PUSH0 PUSH0 SHL CALLER PUSH2 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xAF PUSH32 0x68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1 CALLER PUSH2 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x29E JUMP JUMPDEST PUSH0 PUSH2 0xC7 DUP4 DUP4 PUSH2 0x1AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1A1 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x13E PUSH2 0x20E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1A5 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x242 DUP3 PUSH2 0x219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x238 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26D DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x215 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295 DUP5 DUP3 DUP6 ADD PUSH2 0x25F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1320 PUSH2 0x2BD PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x538 ADD MSTORE PUSH2 0x845 ADD MSTORE PUSH2 0x1320 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBF83F51F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBF83F51F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x205 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x7E2CEA5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x307 JUMPI POP PUSH2 0x306 DUP3 PUSH2 0x8AD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x375 DUP2 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x37F DUP4 DUP4 PUSH2 0x92A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FB DUP3 DUP3 PUSH2 0xA1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH2 0x471 PUSH2 0xB03 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x667 PUSH2 0xB52 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1 PUSH2 0x693 DUP2 PUSH2 0x916 JUMP JUMPDEST DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x819 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x2 PUSH0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71A PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x791 JUMPI PUSH2 0x790 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x560EF4F9524AF91C8F006852A8707C3F256C238779F8CC088BBE202BB82E632E DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6E0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x82A DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x833 DUP2 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x83D DUP4 DUP4 PUSH2 0xA1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x927 DUP2 PUSH2 0x922 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x935 DUP4 DUP4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0xA09 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9A6 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP4 DUP4 PUSH2 0x400 JUMP JUMPDEST ISZERO PUSH2 0xAF9 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA96 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAFD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB65 DUP3 DUP3 PUSH2 0x400 JUMP JUMPDEST PUSH2 0xBA8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE8 DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC03 DUP2 PUSH2 0xBDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2B DUP5 DUP3 DUP6 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC48 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH0 DUP4 ADD DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC90 DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA0 DUP2 PUSH2 0xC86 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBB DUP2 PUSH2 0xC97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE3 DUP5 DUP3 DUP6 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFE DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD17 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD48 PUSH0 DUP4 ADD DUP5 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD61 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD72 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD9A DUP5 DUP3 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH2 0xDB8 PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC6 DUP6 DUP3 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD7 DUP6 DUP3 DUP7 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE57 JUMPI PUSH2 0xE56 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE74 JUMPI PUSH2 0xE73 PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST PUSH2 0xED8 DUP8 DUP3 DUP9 ADD PUSH2 0xDED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP8 DUP3 DUP9 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF38 PUSH2 0xF33 PUSH2 0xF2E DUP5 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP3 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5A DUP3 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF83 PUSH0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A204E6F207265776172647320746F20636C PUSH0 DUP3 ADD MSTORE PUSH32 0x61696D0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFF3 PUSH1 0x23 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFE DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1020 DUP2 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xC86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1049 PUSH0 DUP4 ADD DUP6 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x1056 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1070 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1081 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A20546F6B656E207472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x110C PUSH1 0x25 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1117 DUP3 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1139 DUP2 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A20496E707574206172726179206C656E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468206D69736D61746368000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x119A PUSH1 0x2B DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A5 DUP3 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C7 DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1232 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP2 POP PUSH2 0x123D DUP4 PUSH2 0xCEC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128F PUSH1 0x1F DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x129A DUP3 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BC DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x12E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xB8 TIMESTAMP MUL PUSH32 0x78AD89AE9E4A02FEF229F1FDA4B8982435982C67120FC5DC278BE364736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "245:1475:7:-:0;;;617:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;;;;690:19:7;669:41;;;;;;;;;;721:42;2241:4:0;732:18:7;;752:10;721;;;:42;;:::i;:::-;;774:35;400:24;798:10;774;;;:35;;:::i;:::-;;617:200;245:1475;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;245:1475:7:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 1123,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ORACLE_ROLE_605": {
									"entryPoint": 803,
									"id": 605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 2907,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 2326,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 2346,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_534": {
									"entryPoint": 2579,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_432": {
									"entryPoint": 2898,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_424": {
									"entryPoint": 2819,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 2586,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allocateRewards_699": {
									"entryPoint": 1641,
									"id": 699,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@availableRewards_754": {
									"entryPoint": 2151,
									"id": 754,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_742": {
									"entryPoint": 1129,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_129": {
									"entryPoint": 839,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 867,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 1024,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 901,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 2081,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardToken_600": {
									"entryPoint": 2115,
									"id": 600,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_609": {
									"entryPoint": 782,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_575": {
									"entryPoint": 2221,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 661,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$522_to_t_address_fromStack": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$522__to_t_address__fromStack_reversed": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$522_to_t_address": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13948:8",
										"nodeType": "YulBlock",
										"src": "0:13948:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "378:105:8",
													"nodeType": "YulBlock",
													"src": "378:105:8",
													"statements": [
														{
															"nativeSrc": "388:89:8",
															"nodeType": "YulAssignment",
															"src": "388:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:8",
																		"nodeType": "YulLiteral",
																		"src": "410:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:8"
																},
																"nativeSrc": "399:78:8",
																"nodeType": "YulFunctionCall",
																"src": "399:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:8",
														"nodeType": "YulTypedName",
														"src": "360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:8",
														"nodeType": "YulTypedName",
														"src": "370:7:8",
														"type": ""
													}
												],
												"src": "334:149:8"
											},
											{
												"body": {
													"nativeSrc": "531:78:8",
													"nodeType": "YulBlock",
													"src": "531:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:8",
																"nodeType": "YulBlock",
																"src": "587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:8",
																					"nodeType": "YulLiteral",
																					"src": "596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:8"
																			},
																			"nativeSrc": "589:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:8"
																		},
																		"nativeSrc": "589:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:8"
																				},
																				"nativeSrc": "561:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:8"
																		},
																		"nativeSrc": "551:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:8"
																},
																"nativeSrc": "544:42:8",
																"nodeType": "YulFunctionCall",
																"src": "544:42:8"
															},
															"nativeSrc": "541:62:8",
															"nodeType": "YulIf",
															"src": "541:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:8",
														"nodeType": "YulTypedName",
														"src": "524:5:8",
														"type": ""
													}
												],
												"src": "489:120:8"
											},
											{
												"body": {
													"nativeSrc": "666:86:8",
													"nodeType": "YulBlock",
													"src": "666:86:8",
													"statements": [
														{
															"nativeSrc": "676:29:8",
															"nodeType": "YulAssignment",
															"src": "676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:8"
																},
																"nativeSrc": "685:20:8",
																"nodeType": "YulFunctionCall",
																"src": "685:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:8"
																},
																"nativeSrc": "714:32:8",
																"nodeType": "YulFunctionCall",
																"src": "714:32:8"
															},
															"nativeSrc": "714:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:8",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:8",
														"nodeType": "YulTypedName",
														"src": "652:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:8",
														"nodeType": "YulTypedName",
														"src": "660:5:8",
														"type": ""
													}
												],
												"src": "615:137:8"
											},
											{
												"body": {
													"nativeSrc": "823:262:8",
													"nodeType": "YulBlock",
													"src": "823:262:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:8",
																"nodeType": "YulBlock",
																"src": "869:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:8"
																			},
																			"nativeSrc": "871:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:8"
																		},
																		"nativeSrc": "871:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nativeSrc": "840:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:8",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nativeSrc": "836:32:8",
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nativeSrc": "833:119:8",
															"nodeType": "YulIf",
															"src": "833:119:8"
														},
														{
															"nativeSrc": "962:116:8",
															"nodeType": "YulBlock",
															"src": "962:116:8",
															"statements": [
																{
																	"nativeSrc": "977:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:8",
																			"nodeType": "YulTypedName",
																			"src": "981:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:8",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:8"
																				},
																				"nativeSrc": "1036:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:8"
																		},
																		"nativeSrc": "1016:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:8",
														"nodeType": "YulTypedName",
														"src": "793:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:8",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:8",
														"nodeType": "YulTypedName",
														"src": "816:6:8",
														"type": ""
													}
												],
												"src": "758:327:8"
											},
											{
												"body": {
													"nativeSrc": "1133:48:8",
													"nodeType": "YulBlock",
													"src": "1133:48:8",
													"statements": [
														{
															"nativeSrc": "1143:32:8",
															"nodeType": "YulAssignment",
															"src": "1143:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:8"
																		},
																		"nativeSrc": "1161:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:8"
																},
																"nativeSrc": "1154:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:8",
														"nodeType": "YulTypedName",
														"src": "1115:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:8",
														"nodeType": "YulTypedName",
														"src": "1125:7:8",
														"type": ""
													}
												],
												"src": "1091:90:8"
											},
											{
												"body": {
													"nativeSrc": "1246:50:8",
													"nodeType": "YulBlock",
													"src": "1246:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:8"
																		},
																		"nativeSrc": "1268:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																},
																"nativeSrc": "1256:34:8",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:8"
															},
															"nativeSrc": "1256:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:8",
														"nodeType": "YulTypedName",
														"src": "1234:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:8",
														"nodeType": "YulTypedName",
														"src": "1241:3:8",
														"type": ""
													}
												],
												"src": "1187:109:8"
											},
											{
												"body": {
													"nativeSrc": "1394:118:8",
													"nodeType": "YulBlock",
													"src": "1394:118:8",
													"statements": [
														{
															"nativeSrc": "1404:26:8",
															"nodeType": "YulAssignment",
															"src": "1404:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:8"
																},
																"nativeSrc": "1412:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:8"
																		},
																		"nativeSrc": "1487:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:8"
																},
																"nativeSrc": "1440:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:8"
															},
															"nativeSrc": "1440:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:8",
														"nodeType": "YulTypedName",
														"src": "1366:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:8",
														"nodeType": "YulTypedName",
														"src": "1378:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:8",
														"nodeType": "YulTypedName",
														"src": "1389:4:8",
														"type": ""
													}
												],
												"src": "1302:210:8"
											},
											{
												"body": {
													"nativeSrc": "1563:81:8",
													"nodeType": "YulBlock",
													"src": "1563:81:8",
													"statements": [
														{
															"nativeSrc": "1573:65:8",
															"nodeType": "YulAssignment",
															"src": "1573:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:8"
																},
																"nativeSrc": "1584:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:8",
														"nodeType": "YulTypedName",
														"src": "1545:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:8",
														"nodeType": "YulTypedName",
														"src": "1555:7:8",
														"type": ""
													}
												],
												"src": "1518:126:8"
											},
											{
												"body": {
													"nativeSrc": "1695:51:8",
													"nodeType": "YulBlock",
													"src": "1695:51:8",
													"statements": [
														{
															"nativeSrc": "1705:35:8",
															"nodeType": "YulAssignment",
															"src": "1705:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:8"
																},
																"nativeSrc": "1716:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:8",
														"nodeType": "YulTypedName",
														"src": "1677:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:8",
														"nodeType": "YulTypedName",
														"src": "1687:7:8",
														"type": ""
													}
												],
												"src": "1650:96:8"
											},
											{
												"body": {
													"nativeSrc": "1795:79:8",
													"nodeType": "YulBlock",
													"src": "1795:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:8",
																"nodeType": "YulBlock",
																"src": "1852:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:8"
																			},
																			"nativeSrc": "1854:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:8"
																		},
																		"nativeSrc": "1854:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:8"
																				},
																				"nativeSrc": "1825:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:8"
																		},
																		"nativeSrc": "1815:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																},
																"nativeSrc": "1808:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:8"
															},
															"nativeSrc": "1805:63:8",
															"nodeType": "YulIf",
															"src": "1805:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:8",
														"nodeType": "YulTypedName",
														"src": "1788:5:8",
														"type": ""
													}
												],
												"src": "1752:122:8"
											},
											{
												"body": {
													"nativeSrc": "1932:87:8",
													"nodeType": "YulBlock",
													"src": "1932:87:8",
													"statements": [
														{
															"nativeSrc": "1942:29:8",
															"nodeType": "YulAssignment",
															"src": "1942:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:8"
																},
																"nativeSrc": "1951:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:8"
																},
																"nativeSrc": "1980:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:8"
															},
															"nativeSrc": "1980:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:8",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:8",
														"nodeType": "YulTypedName",
														"src": "1918:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:8",
														"nodeType": "YulTypedName",
														"src": "1926:5:8",
														"type": ""
													}
												],
												"src": "1880:139:8"
											},
											{
												"body": {
													"nativeSrc": "2091:263:8",
													"nodeType": "YulBlock",
													"src": "2091:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:8",
																"nodeType": "YulBlock",
																"src": "2137:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:8"
																			},
																			"nativeSrc": "2139:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:8"
																		},
																		"nativeSrc": "2139:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:8"
																		},
																		"nativeSrc": "2108:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:8"
																},
																"nativeSrc": "2104:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:8"
															},
															"nativeSrc": "2101:119:8",
															"nodeType": "YulIf",
															"src": "2101:119:8"
														},
														{
															"nativeSrc": "2230:117:8",
															"nodeType": "YulBlock",
															"src": "2230:117:8",
															"statements": [
																{
																	"nativeSrc": "2245:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:8"
																				},
																				"nativeSrc": "2305:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:8"
																		},
																		"nativeSrc": "2284:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:8",
														"nodeType": "YulTypedName",
														"src": "2061:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:8",
														"nodeType": "YulTypedName",
														"src": "2072:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:8",
														"nodeType": "YulTypedName",
														"src": "2084:6:8",
														"type": ""
													}
												],
												"src": "2025:329:8"
											},
											{
												"body": {
													"nativeSrc": "2405:32:8",
													"nodeType": "YulBlock",
													"src": "2405:32:8",
													"statements": [
														{
															"nativeSrc": "2415:16:8",
															"nodeType": "YulAssignment",
															"src": "2415:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:8",
																"nodeType": "YulIdentifier",
																"src": "2426:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:8",
														"nodeType": "YulTypedName",
														"src": "2387:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:8",
														"nodeType": "YulTypedName",
														"src": "2397:7:8",
														"type": ""
													}
												],
												"src": "2360:77:8"
											},
											{
												"body": {
													"nativeSrc": "2508:53:8",
													"nodeType": "YulBlock",
													"src": "2508:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:8"
																		},
																		"nativeSrc": "2530:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:8"
																},
																"nativeSrc": "2518:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:8"
															},
															"nativeSrc": "2518:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:8",
														"nodeType": "YulTypedName",
														"src": "2496:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:8",
														"nodeType": "YulTypedName",
														"src": "2503:3:8",
														"type": ""
													}
												],
												"src": "2443:118:8"
											},
											{
												"body": {
													"nativeSrc": "2665:124:8",
													"nodeType": "YulBlock",
													"src": "2665:124:8",
													"statements": [
														{
															"nativeSrc": "2675:26:8",
															"nodeType": "YulAssignment",
															"src": "2675:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:8"
																},
																"nativeSrc": "2683:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:8"
																		},
																		"nativeSrc": "2764:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:8"
																},
																"nativeSrc": "2711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:8"
															},
															"nativeSrc": "2711:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:8",
														"nodeType": "YulTypedName",
														"src": "2637:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:8",
														"nodeType": "YulTypedName",
														"src": "2649:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:8",
														"nodeType": "YulTypedName",
														"src": "2660:4:8",
														"type": ""
													}
												],
												"src": "2567:222:8"
											},
											{
												"body": {
													"nativeSrc": "2840:32:8",
													"nodeType": "YulBlock",
													"src": "2840:32:8",
													"statements": [
														{
															"nativeSrc": "2850:16:8",
															"nodeType": "YulAssignment",
															"src": "2850:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2861:5:8",
																"nodeType": "YulIdentifier",
																"src": "2861:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2850:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2850:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2795:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2822:5:8",
														"nodeType": "YulTypedName",
														"src": "2822:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2832:7:8",
														"nodeType": "YulTypedName",
														"src": "2832:7:8",
														"type": ""
													}
												],
												"src": "2795:77:8"
											},
											{
												"body": {
													"nativeSrc": "2943:53:8",
													"nodeType": "YulBlock",
													"src": "2943:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2960:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2960:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2983:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2983:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2965:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2965:17:8"
																		},
																		"nativeSrc": "2965:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:8"
																},
																"nativeSrc": "2953:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2953:37:8"
															},
															"nativeSrc": "2953:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2953:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2878:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2931:5:8",
														"nodeType": "YulTypedName",
														"src": "2931:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2938:3:8",
														"nodeType": "YulTypedName",
														"src": "2938:3:8",
														"type": ""
													}
												],
												"src": "2878:118:8"
											},
											{
												"body": {
													"nativeSrc": "3100:124:8",
													"nodeType": "YulBlock",
													"src": "3100:124:8",
													"statements": [
														{
															"nativeSrc": "3110:26:8",
															"nodeType": "YulAssignment",
															"src": "3110:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3122:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3122:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:8"
																},
																"nativeSrc": "3118:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3118:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3110:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3110:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3190:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3190:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3203:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3214:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3214:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3199:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:8"
																		},
																		"nativeSrc": "3199:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3146:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3146:43:8"
																},
																"nativeSrc": "3146:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3146:71:8"
															},
															"nativeSrc": "3146:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3146:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3002:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3072:9:8",
														"nodeType": "YulTypedName",
														"src": "3072:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3084:6:8",
														"nodeType": "YulTypedName",
														"src": "3084:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:8",
														"nodeType": "YulTypedName",
														"src": "3095:4:8",
														"type": ""
													}
												],
												"src": "3002:222:8"
											},
											{
												"body": {
													"nativeSrc": "3273:79:8",
													"nodeType": "YulBlock",
													"src": "3273:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:8",
																"nodeType": "YulBlock",
																"src": "3330:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:8"
																			},
																			"nativeSrc": "3332:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:8"
																		},
																		"nativeSrc": "3332:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3296:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3321:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3321:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3303:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3303:17:8"
																				},
																				"nativeSrc": "3303:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3293:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3293:2:8"
																		},
																		"nativeSrc": "3293:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:8"
																},
																"nativeSrc": "3286:43:8",
																"nodeType": "YulFunctionCall",
																"src": "3286:43:8"
															},
															"nativeSrc": "3283:63:8",
															"nodeType": "YulIf",
															"src": "3283:63:8"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3230:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3266:5:8",
														"nodeType": "YulTypedName",
														"src": "3266:5:8",
														"type": ""
													}
												],
												"src": "3230:122:8"
											},
											{
												"body": {
													"nativeSrc": "3410:87:8",
													"nodeType": "YulBlock",
													"src": "3410:87:8",
													"statements": [
														{
															"nativeSrc": "3420:29:8",
															"nodeType": "YulAssignment",
															"src": "3420:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3442:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3442:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3429:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3429:12:8"
																},
																"nativeSrc": "3429:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3429:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3420:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3420:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3485:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3485:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3458:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3458:26:8"
																},
																"nativeSrc": "3458:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3458:33:8"
															},
															"nativeSrc": "3458:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3458:33:8"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3358:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3388:6:8",
														"nodeType": "YulTypedName",
														"src": "3388:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3396:3:8",
														"nodeType": "YulTypedName",
														"src": "3396:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3404:5:8",
														"nodeType": "YulTypedName",
														"src": "3404:5:8",
														"type": ""
													}
												],
												"src": "3358:139:8"
											},
											{
												"body": {
													"nativeSrc": "3569:263:8",
													"nodeType": "YulBlock",
													"src": "3569:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3615:83:8",
																"nodeType": "YulBlock",
																"src": "3615:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3617:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3617:77:8"
																			},
																			"nativeSrc": "3617:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3617:79:8"
																		},
																		"nativeSrc": "3617:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3617:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3590:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3590:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3586:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:8"
																		},
																		"nativeSrc": "3586:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3611:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3611:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:8"
																},
																"nativeSrc": "3582:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3582:32:8"
															},
															"nativeSrc": "3579:119:8",
															"nodeType": "YulIf",
															"src": "3579:119:8"
														},
														{
															"nativeSrc": "3708:117:8",
															"nodeType": "YulBlock",
															"src": "3708:117:8",
															"statements": [
																{
																	"nativeSrc": "3723:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3723:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3737:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3737:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3727:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3727:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3752:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3752:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3787:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3787:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3798:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3798:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3783:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3783:3:8"
																				},
																				"nativeSrc": "3783:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3783:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3807:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3807:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3762:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3762:20:8"
																		},
																		"nativeSrc": "3762:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3762:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3752:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3752:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3503:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:8",
														"nodeType": "YulTypedName",
														"src": "3539:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3550:7:8",
														"nodeType": "YulTypedName",
														"src": "3550:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3562:6:8",
														"nodeType": "YulTypedName",
														"src": "3562:6:8",
														"type": ""
													}
												],
												"src": "3503:329:8"
											},
											{
												"body": {
													"nativeSrc": "3921:391:8",
													"nodeType": "YulBlock",
													"src": "3921:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3967:83:8",
																"nodeType": "YulBlock",
																"src": "3967:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3969:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3969:77:8"
																			},
																			"nativeSrc": "3969:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:79:8"
																		},
																		"nativeSrc": "3969:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3942:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3951:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3938:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:8"
																		},
																		"nativeSrc": "3938:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3934:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:8"
																},
																"nativeSrc": "3934:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3934:32:8"
															},
															"nativeSrc": "3931:119:8",
															"nodeType": "YulIf",
															"src": "3931:119:8"
														},
														{
															"nativeSrc": "4060:117:8",
															"nodeType": "YulBlock",
															"src": "4060:117:8",
															"statements": [
																{
																	"nativeSrc": "4075:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4075:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4089:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4079:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4079:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4104:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4104:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4139:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4139:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4150:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4135:3:8"
																				},
																				"nativeSrc": "4135:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4135:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4159:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4159:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4114:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4114:20:8"
																		},
																		"nativeSrc": "4114:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4104:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4104:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4187:118:8",
															"nodeType": "YulBlock",
															"src": "4187:118:8",
															"statements": [
																{
																	"nativeSrc": "4202:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4202:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4216:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4206:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4206:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4232:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4232:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4278:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:8"
																				},
																				"nativeSrc": "4263:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4287:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4287:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4242:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4242:20:8"
																		},
																		"nativeSrc": "4242:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4232:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4232:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3838:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3883:9:8",
														"nodeType": "YulTypedName",
														"src": "3883:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3894:7:8",
														"nodeType": "YulTypedName",
														"src": "3894:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3906:6:8",
														"nodeType": "YulTypedName",
														"src": "3906:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3914:6:8",
														"nodeType": "YulTypedName",
														"src": "3914:6:8",
														"type": ""
													}
												],
												"src": "3838:474:8"
											},
											{
												"body": {
													"nativeSrc": "4407:28:8",
													"nodeType": "YulBlock",
													"src": "4407:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4424:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4427:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4427:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4417:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4417:6:8"
																},
																"nativeSrc": "4417:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4417:12:8"
															},
															"nativeSrc": "4417:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "4417:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4318:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4318:117:8"
											},
											{
												"body": {
													"nativeSrc": "4530:28:8",
													"nodeType": "YulBlock",
													"src": "4530:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4547:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4547:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4550:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4540:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:8"
																},
																"nativeSrc": "4540:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4540:12:8"
															},
															"nativeSrc": "4540:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "4540:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "4441:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4441:117:8"
											},
											{
												"body": {
													"nativeSrc": "4653:28:8",
													"nodeType": "YulBlock",
													"src": "4653:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4670:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4670:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4673:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4673:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4663:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:8"
																},
																"nativeSrc": "4663:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4663:12:8"
															},
															"nativeSrc": "4663:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "4663:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4564:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4564:117:8"
											},
											{
												"body": {
													"nativeSrc": "4794:478:8",
													"nodeType": "YulBlock",
													"src": "4794:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4843:83:8",
																"nodeType": "YulBlock",
																"src": "4843:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4845:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4845:77:8"
																			},
																			"nativeSrc": "4845:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4845:79:8"
																		},
																		"nativeSrc": "4845:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4845:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4822:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4822:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4830:4:8",
																						"nodeType": "YulLiteral",
																						"src": "4830:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4818:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4818:3:8"
																				},
																				"nativeSrc": "4818:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4818:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4837:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4837:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4814:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:8"
																		},
																		"nativeSrc": "4814:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4807:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:8"
																},
																"nativeSrc": "4807:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4807:35:8"
															},
															"nativeSrc": "4804:122:8",
															"nodeType": "YulIf",
															"src": "4804:122:8"
														},
														{
															"nativeSrc": "4935:30:8",
															"nodeType": "YulAssignment",
															"src": "4935:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4958:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4945:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4945:12:8"
																},
																"nativeSrc": "4945:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4945:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5008:83:8",
																"nodeType": "YulBlock",
																"src": "5008:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5010:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5010:77:8"
																			},
																			"nativeSrc": "5010:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5010:79:8"
																		},
																		"nativeSrc": "5010:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5010:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4980:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4980:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4977:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4977:2:8"
																},
																"nativeSrc": "4977:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4977:30:8"
															},
															"nativeSrc": "4974:117:8",
															"nodeType": "YulIf",
															"src": "4974:117:8"
														},
														{
															"nativeSrc": "5100:29:8",
															"nodeType": "YulAssignment",
															"src": "5100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5116:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5124:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5124:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5112:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:8"
																},
																"nativeSrc": "5112:17:8",
																"nodeType": "YulFunctionCall",
																"src": "5112:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5100:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5100:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5183:83:8",
																"nodeType": "YulBlock",
																"src": "5183:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5185:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5185:77:8"
																			},
																			"nativeSrc": "5185:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5185:79:8"
																		},
																		"nativeSrc": "5185:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5185:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5148:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "5148:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5162:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5170:4:8",
																						"nodeType": "YulLiteral",
																						"src": "5170:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5158:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5158:3:8"
																				},
																				"nativeSrc": "5158:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5158:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:8"
																		},
																		"nativeSrc": "5144:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5141:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5141:2:8"
																},
																"nativeSrc": "5141:41:8",
																"nodeType": "YulFunctionCall",
																"src": "5141:41:8"
															},
															"nativeSrc": "5138:128:8",
															"nodeType": "YulIf",
															"src": "5138:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "4704:568:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4761:6:8",
														"nodeType": "YulTypedName",
														"src": "4761:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4769:3:8",
														"nodeType": "YulTypedName",
														"src": "4769:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4777:8:8",
														"nodeType": "YulTypedName",
														"src": "4777:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4787:6:8",
														"nodeType": "YulTypedName",
														"src": "4787:6:8",
														"type": ""
													}
												],
												"src": "4704:568:8"
											},
											{
												"body": {
													"nativeSrc": "5385:478:8",
													"nodeType": "YulBlock",
													"src": "5385:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5434:83:8",
																"nodeType": "YulBlock",
																"src": "5434:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5436:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5436:77:8"
																			},
																			"nativeSrc": "5436:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5436:79:8"
																		},
																		"nativeSrc": "5436:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5436:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5413:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5413:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5421:4:8",
																						"nodeType": "YulLiteral",
																						"src": "5421:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5409:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5409:3:8"
																				},
																				"nativeSrc": "5409:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5409:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5428:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5428:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5405:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:8"
																		},
																		"nativeSrc": "5405:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5405:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5398:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5398:6:8"
																},
																"nativeSrc": "5398:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5398:35:8"
															},
															"nativeSrc": "5395:122:8",
															"nodeType": "YulIf",
															"src": "5395:122:8"
														},
														{
															"nativeSrc": "5526:30:8",
															"nodeType": "YulAssignment",
															"src": "5526:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5549:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5549:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5536:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5536:12:8"
																},
																"nativeSrc": "5536:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5536:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5526:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5599:83:8",
																"nodeType": "YulBlock",
																"src": "5599:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5601:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5601:77:8"
																			},
																			"nativeSrc": "5601:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5601:79:8"
																		},
																		"nativeSrc": "5601:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5601:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5571:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5579:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5579:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5568:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5568:2:8"
																},
																"nativeSrc": "5568:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5568:30:8"
															},
															"nativeSrc": "5565:117:8",
															"nodeType": "YulIf",
															"src": "5565:117:8"
														},
														{
															"nativeSrc": "5691:29:8",
															"nodeType": "YulAssignment",
															"src": "5691:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5707:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5707:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5715:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5715:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5703:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:8"
																},
																"nativeSrc": "5703:17:8",
																"nodeType": "YulFunctionCall",
																"src": "5703:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5691:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5691:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5774:83:8",
																"nodeType": "YulBlock",
																"src": "5774:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5776:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5776:77:8"
																			},
																			"nativeSrc": "5776:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5776:79:8"
																		},
																		"nativeSrc": "5776:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5776:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5739:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "5739:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5753:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5753:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5761:4:8",
																						"nodeType": "YulLiteral",
																						"src": "5761:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5749:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5749:3:8"
																				},
																				"nativeSrc": "5749:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5749:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5735:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5735:3:8"
																		},
																		"nativeSrc": "5735:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5735:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5769:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5769:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5732:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5732:2:8"
																},
																"nativeSrc": "5732:41:8",
																"nodeType": "YulFunctionCall",
																"src": "5732:41:8"
															},
															"nativeSrc": "5729:128:8",
															"nodeType": "YulIf",
															"src": "5729:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "5295:568:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5352:6:8",
														"nodeType": "YulTypedName",
														"src": "5352:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5360:3:8",
														"nodeType": "YulTypedName",
														"src": "5360:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5368:8:8",
														"nodeType": "YulTypedName",
														"src": "5368:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5378:6:8",
														"nodeType": "YulTypedName",
														"src": "5378:6:8",
														"type": ""
													}
												],
												"src": "5295:568:8"
											},
											{
												"body": {
													"nativeSrc": "6022:781:8",
													"nodeType": "YulBlock",
													"src": "6022:781:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6068:83:8",
																"nodeType": "YulBlock",
																"src": "6068:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6070:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6070:77:8"
																			},
																			"nativeSrc": "6070:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6070:79:8"
																		},
																		"nativeSrc": "6070:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6070:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6043:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6043:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6052:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6039:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:8"
																		},
																		"nativeSrc": "6039:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6064:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6064:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6035:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6035:3:8"
																},
																"nativeSrc": "6035:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6035:32:8"
															},
															"nativeSrc": "6032:119:8",
															"nodeType": "YulIf",
															"src": "6032:119:8"
														},
														{
															"nativeSrc": "6161:312:8",
															"nodeType": "YulBlock",
															"src": "6161:312:8",
															"statements": [
																{
																	"nativeSrc": "6176:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6176:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6207:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6207:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6218:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6218:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6203:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6203:3:8"
																				},
																				"nativeSrc": "6203:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6203:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6190:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "6190:12:8"
																		},
																		"nativeSrc": "6190:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6180:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6180:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6268:83:8",
																		"nodeType": "YulBlock",
																		"src": "6268:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6270:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "6270:77:8"
																					},
																					"nativeSrc": "6270:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6270:79:8"
																				},
																				"nativeSrc": "6270:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6270:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6240:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6240:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6248:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6237:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6237:2:8"
																		},
																		"nativeSrc": "6237:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6237:30:8"
																	},
																	"nativeSrc": "6234:117:8",
																	"nodeType": "YulIf",
																	"src": "6234:117:8"
																},
																{
																	"nativeSrc": "6365:98:8",
																	"nodeType": "YulAssignment",
																	"src": "6365:98:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6435:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6435:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6446:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6446:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6431:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6431:3:8"
																				},
																				"nativeSrc": "6431:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6431:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6455:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6455:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "6383:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "6383:47:8"
																		},
																		"nativeSrc": "6383:80:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6383:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6365:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6365:6:8"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "6373:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6373:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6483:313:8",
															"nodeType": "YulBlock",
															"src": "6483:313:8",
															"statements": [
																{
																	"nativeSrc": "6498:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6498:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6529:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6529:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6540:2:8",
																						"nodeType": "YulLiteral",
																						"src": "6540:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6525:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6525:3:8"
																				},
																				"nativeSrc": "6525:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6525:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6512:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "6512:12:8"
																		},
																		"nativeSrc": "6512:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6512:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6502:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6502:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6591:83:8",
																		"nodeType": "YulBlock",
																		"src": "6591:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6593:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "6593:77:8"
																					},
																					"nativeSrc": "6593:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6593:79:8"
																				},
																				"nativeSrc": "6593:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6593:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6563:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6563:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6571:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6571:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6560:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6560:2:8"
																		},
																		"nativeSrc": "6560:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:30:8"
																	},
																	"nativeSrc": "6557:117:8",
																	"nodeType": "YulIf",
																	"src": "6557:117:8"
																},
																{
																	"nativeSrc": "6688:98:8",
																	"nodeType": "YulAssignment",
																	"src": "6688:98:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6758:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6758:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6769:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6769:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6754:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6754:3:8"
																				},
																				"nativeSrc": "6754:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6754:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6778:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6778:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "6706:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "6706:47:8"
																		},
																		"nativeSrc": "6706:80:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6706:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6688:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6688:6:8"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "6696:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6696:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "5869:934:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5968:9:8",
														"nodeType": "YulTypedName",
														"src": "5968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5979:7:8",
														"nodeType": "YulTypedName",
														"src": "5979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5991:6:8",
														"nodeType": "YulTypedName",
														"src": "5991:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5999:6:8",
														"nodeType": "YulTypedName",
														"src": "5999:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6007:6:8",
														"nodeType": "YulTypedName",
														"src": "6007:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6015:6:8",
														"nodeType": "YulTypedName",
														"src": "6015:6:8",
														"type": ""
													}
												],
												"src": "5869:934:8"
											},
											{
												"body": {
													"nativeSrc": "6841:28:8",
													"nodeType": "YulBlock",
													"src": "6841:28:8",
													"statements": [
														{
															"nativeSrc": "6851:12:8",
															"nodeType": "YulAssignment",
															"src": "6851:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6858:5:8",
																"nodeType": "YulIdentifier",
																"src": "6858:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6851:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6809:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6827:5:8",
														"nodeType": "YulTypedName",
														"src": "6827:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6837:3:8",
														"nodeType": "YulTypedName",
														"src": "6837:3:8",
														"type": ""
													}
												],
												"src": "6809:60:8"
											},
											{
												"body": {
													"nativeSrc": "6935:82:8",
													"nodeType": "YulBlock",
													"src": "6935:82:8",
													"statements": [
														{
															"nativeSrc": "6945:66:8",
															"nodeType": "YulAssignment",
															"src": "6945:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7003:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7003:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6985:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6985:17:8"
																				},
																				"nativeSrc": "6985:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6985:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6976:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "6976:8:8"
																		},
																		"nativeSrc": "6976:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6976:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6958:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6958:17:8"
																},
																"nativeSrc": "6958:53:8",
																"nodeType": "YulFunctionCall",
																"src": "6958:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6945:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "6945:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6875:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6925:9:8",
														"nodeType": "YulTypedName",
														"src": "6925:9:8",
														"type": ""
													}
												],
												"src": "6875:142:8"
											},
											{
												"body": {
													"nativeSrc": "7083:66:8",
													"nodeType": "YulBlock",
													"src": "7083:66:8",
													"statements": [
														{
															"nativeSrc": "7093:50:8",
															"nodeType": "YulAssignment",
															"src": "7093:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7137:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7137:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7106:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7106:30:8"
																},
																"nativeSrc": "7106:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7106:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7093:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7023:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7063:5:8",
														"nodeType": "YulTypedName",
														"src": "7063:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7073:9:8",
														"nodeType": "YulTypedName",
														"src": "7073:9:8",
														"type": ""
													}
												],
												"src": "7023:126:8"
											},
											{
												"body": {
													"nativeSrc": "7229:66:8",
													"nodeType": "YulBlock",
													"src": "7229:66:8",
													"statements": [
														{
															"nativeSrc": "7239:50:8",
															"nodeType": "YulAssignment",
															"src": "7239:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7283:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7283:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7252:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:30:8"
																},
																"nativeSrc": "7252:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7239:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7239:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$522_to_t_address",
												"nativeSrc": "7155:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7209:5:8",
														"nodeType": "YulTypedName",
														"src": "7209:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7219:9:8",
														"nodeType": "YulTypedName",
														"src": "7219:9:8",
														"type": ""
													}
												],
												"src": "7155:140:8"
											},
											{
												"body": {
													"nativeSrc": "7380:80:8",
													"nodeType": "YulBlock",
													"src": "7380:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7397:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7397:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7447:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7447:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$522_to_t_address",
																			"nativeSrc": "7402:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "7402:44:8"
																		},
																		"nativeSrc": "7402:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7390:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:8"
																},
																"nativeSrc": "7390:64:8",
																"nodeType": "YulFunctionCall",
																"src": "7390:64:8"
															},
															"nativeSrc": "7390:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "7390:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$522_to_t_address_fromStack",
												"nativeSrc": "7301:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7368:5:8",
														"nodeType": "YulTypedName",
														"src": "7368:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7375:3:8",
														"nodeType": "YulTypedName",
														"src": "7375:3:8",
														"type": ""
													}
												],
												"src": "7301:159:8"
											},
											{
												"body": {
													"nativeSrc": "7578:138:8",
													"nodeType": "YulBlock",
													"src": "7578:138:8",
													"statements": [
														{
															"nativeSrc": "7588:26:8",
															"nodeType": "YulAssignment",
															"src": "7588:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7600:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7600:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7611:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7611:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7596:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7596:3:8"
																},
																"nativeSrc": "7596:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7596:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7588:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7588:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7682:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7682:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7695:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7695:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7706:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7706:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:8"
																		},
																		"nativeSrc": "7691:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$522_to_t_address_fromStack",
																	"nativeSrc": "7624:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "7624:57:8"
																},
																"nativeSrc": "7624:85:8",
																"nodeType": "YulFunctionCall",
																"src": "7624:85:8"
															},
															"nativeSrc": "7624:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "7624:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$522__to_t_address__fromStack_reversed",
												"nativeSrc": "7466:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7550:9:8",
														"nodeType": "YulTypedName",
														"src": "7550:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7562:6:8",
														"nodeType": "YulTypedName",
														"src": "7562:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7573:4:8",
														"nodeType": "YulTypedName",
														"src": "7573:4:8",
														"type": ""
													}
												],
												"src": "7466:250:8"
											},
											{
												"body": {
													"nativeSrc": "7818:73:8",
													"nodeType": "YulBlock",
													"src": "7818:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7835:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7835:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7840:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7840:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7828:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:8"
																},
																"nativeSrc": "7828:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7828:19:8"
															},
															"nativeSrc": "7828:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "7828:19:8"
														},
														{
															"nativeSrc": "7856:29:8",
															"nodeType": "YulAssignment",
															"src": "7856:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7875:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7875:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7880:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7880:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7871:3:8"
																},
																"nativeSrc": "7871:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7871:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7856:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "7856:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7722:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7790:3:8",
														"nodeType": "YulTypedName",
														"src": "7790:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7795:6:8",
														"nodeType": "YulTypedName",
														"src": "7795:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7806:11:8",
														"nodeType": "YulTypedName",
														"src": "7806:11:8",
														"type": ""
													}
												],
												"src": "7722:169:8"
											},
											{
												"body": {
													"nativeSrc": "8003:116:8",
													"nodeType": "YulBlock",
													"src": "8003:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8025:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8025:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8033:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8021:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:8"
																		},
																		"nativeSrc": "8021:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:14:8"
																	},
																	{
																		"hexValue": "436f6d70757465526577617264733a204e6f207265776172647320746f20636c",
																		"kind": "string",
																		"nativeSrc": "8037:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8037:34:8",
																		"type": "",
																		"value": "ComputeRewards: No rewards to cl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8014:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:8"
																},
																"nativeSrc": "8014:58:8",
																"nodeType": "YulFunctionCall",
																"src": "8014:58:8"
															},
															"nativeSrc": "8014:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "8014:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8093:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8093:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8101:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8101:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8089:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8089:3:8"
																		},
																		"nativeSrc": "8089:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8089:15:8"
																	},
																	{
																		"hexValue": "61696d",
																		"kind": "string",
																		"nativeSrc": "8106:5:8",
																		"nodeType": "YulLiteral",
																		"src": "8106:5:8",
																		"type": "",
																		"value": "aim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:8"
																},
																"nativeSrc": "8082:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8082:30:8"
															},
															"nativeSrc": "8082:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8082:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640",
												"nativeSrc": "7897:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7995:6:8",
														"nodeType": "YulTypedName",
														"src": "7995:6:8",
														"type": ""
													}
												],
												"src": "7897:222:8"
											},
											{
												"body": {
													"nativeSrc": "8271:220:8",
													"nodeType": "YulBlock",
													"src": "8271:220:8",
													"statements": [
														{
															"nativeSrc": "8281:74:8",
															"nodeType": "YulAssignment",
															"src": "8281:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8347:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8347:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8352:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8288:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8288:58:8"
																},
																"nativeSrc": "8288:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8288:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8281:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8281:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8453:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8453:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640",
																	"nativeSrc": "8364:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8364:88:8"
																},
																"nativeSrc": "8364:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8364:93:8"
															},
															"nativeSrc": "8364:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8364:93:8"
														},
														{
															"nativeSrc": "8466:19:8",
															"nodeType": "YulAssignment",
															"src": "8466:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8477:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:8"
																},
																"nativeSrc": "8473:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8473:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8466:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8466:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8125:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8259:3:8",
														"nodeType": "YulTypedName",
														"src": "8259:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8267:3:8",
														"nodeType": "YulTypedName",
														"src": "8267:3:8",
														"type": ""
													}
												],
												"src": "8125:366:8"
											},
											{
												"body": {
													"nativeSrc": "8668:248:8",
													"nodeType": "YulBlock",
													"src": "8668:248:8",
													"statements": [
														{
															"nativeSrc": "8678:26:8",
															"nodeType": "YulAssignment",
															"src": "8678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8690:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8690:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8701:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8686:3:8"
																},
																"nativeSrc": "8686:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8725:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8725:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8736:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8736:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8721:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8721:3:8"
																		},
																		"nativeSrc": "8721:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8721:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8744:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8744:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8750:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8750:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8740:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:8"
																		},
																		"nativeSrc": "8740:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8740:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8714:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8714:6:8"
																},
																"nativeSrc": "8714:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8714:47:8"
															},
															"nativeSrc": "8714:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8714:47:8"
														},
														{
															"nativeSrc": "8770:139:8",
															"nodeType": "YulAssignment",
															"src": "8770:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8904:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8904:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8778:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8778:124:8"
																},
																"nativeSrc": "8778:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8778:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8770:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8770:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8497:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8648:9:8",
														"nodeType": "YulTypedName",
														"src": "8648:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8663:4:8",
														"nodeType": "YulTypedName",
														"src": "8663:4:8",
														"type": ""
													}
												],
												"src": "8497:419:8"
											},
											{
												"body": {
													"nativeSrc": "8987:53:8",
													"nodeType": "YulBlock",
													"src": "8987:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9004:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9004:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9027:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9009:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9009:17:8"
																		},
																		"nativeSrc": "9009:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9009:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8997:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:8"
																},
																"nativeSrc": "8997:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8997:37:8"
															},
															"nativeSrc": "8997:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8997:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8922:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8975:5:8",
														"nodeType": "YulTypedName",
														"src": "8975:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8982:3:8",
														"nodeType": "YulTypedName",
														"src": "8982:3:8",
														"type": ""
													}
												],
												"src": "8922:118:8"
											},
											{
												"body": {
													"nativeSrc": "9172:206:8",
													"nodeType": "YulBlock",
													"src": "9172:206:8",
													"statements": [
														{
															"nativeSrc": "9182:26:8",
															"nodeType": "YulAssignment",
															"src": "9182:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9194:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9194:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9205:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9190:3:8"
																},
																"nativeSrc": "9190:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9190:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9182:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9182:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9262:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9262:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9275:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9275:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9286:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9286:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9271:3:8"
																		},
																		"nativeSrc": "9271:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9218:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9218:43:8"
																},
																"nativeSrc": "9218:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9218:71:8"
															},
															"nativeSrc": "9218:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9218:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9343:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9343:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9356:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9356:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9367:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9367:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9352:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9352:3:8"
																		},
																		"nativeSrc": "9352:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9352:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9299:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9299:43:8"
																},
																"nativeSrc": "9299:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9299:72:8"
															},
															"nativeSrc": "9299:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9299:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9046:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9136:9:8",
														"nodeType": "YulTypedName",
														"src": "9136:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9148:6:8",
														"nodeType": "YulTypedName",
														"src": "9148:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9156:6:8",
														"nodeType": "YulTypedName",
														"src": "9156:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9167:4:8",
														"nodeType": "YulTypedName",
														"src": "9167:4:8",
														"type": ""
													}
												],
												"src": "9046:332:8"
											},
											{
												"body": {
													"nativeSrc": "9424:76:8",
													"nodeType": "YulBlock",
													"src": "9424:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9478:16:8",
																"nodeType": "YulBlock",
																"src": "9478:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9487:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9487:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9490:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9490:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9480:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9480:6:8"
																			},
																			"nativeSrc": "9480:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9480:12:8"
																		},
																		"nativeSrc": "9480:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9480:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9447:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9447:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9469:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9469:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9454:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "9454:14:8"
																				},
																				"nativeSrc": "9454:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9454:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9444:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9444:2:8"
																		},
																		"nativeSrc": "9444:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:8"
																},
																"nativeSrc": "9437:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9437:40:8"
															},
															"nativeSrc": "9434:60:8",
															"nodeType": "YulIf",
															"src": "9434:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9384:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9417:5:8",
														"nodeType": "YulTypedName",
														"src": "9417:5:8",
														"type": ""
													}
												],
												"src": "9384:116:8"
											},
											{
												"body": {
													"nativeSrc": "9566:77:8",
													"nodeType": "YulBlock",
													"src": "9566:77:8",
													"statements": [
														{
															"nativeSrc": "9576:22:8",
															"nodeType": "YulAssignment",
															"src": "9576:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9591:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9591:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9585:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9585:5:8"
																},
																"nativeSrc": "9585:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9585:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9576:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9576:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9631:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9631:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9607:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "9607:23:8"
																},
																"nativeSrc": "9607:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9607:30:8"
															},
															"nativeSrc": "9607:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9607:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9506:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9544:6:8",
														"nodeType": "YulTypedName",
														"src": "9544:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9552:3:8",
														"nodeType": "YulTypedName",
														"src": "9552:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9560:5:8",
														"nodeType": "YulTypedName",
														"src": "9560:5:8",
														"type": ""
													}
												],
												"src": "9506:137:8"
											},
											{
												"body": {
													"nativeSrc": "9723:271:8",
													"nodeType": "YulBlock",
													"src": "9723:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9769:83:8",
																"nodeType": "YulBlock",
																"src": "9769:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9771:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9771:77:8"
																			},
																			"nativeSrc": "9771:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9771:79:8"
																		},
																		"nativeSrc": "9771:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9771:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9744:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9744:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9753:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9740:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:8"
																		},
																		"nativeSrc": "9740:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9740:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9736:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9736:3:8"
																},
																"nativeSrc": "9736:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9736:32:8"
															},
															"nativeSrc": "9733:119:8",
															"nodeType": "YulIf",
															"src": "9733:119:8"
														},
														{
															"nativeSrc": "9862:125:8",
															"nodeType": "YulBlock",
															"src": "9862:125:8",
															"statements": [
																{
																	"nativeSrc": "9877:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9877:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9891:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9891:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9881:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9881:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9906:71:8",
																	"nodeType": "YulAssignment",
																	"src": "9906:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9949:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9949:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9960:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9960:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9945:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9945:3:8"
																				},
																				"nativeSrc": "9945:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9945:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9969:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9969:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9916:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "9916:28:8"
																		},
																		"nativeSrc": "9916:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9906:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9906:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9649:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9693:9:8",
														"nodeType": "YulTypedName",
														"src": "9693:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9704:7:8",
														"nodeType": "YulTypedName",
														"src": "9704:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9716:6:8",
														"nodeType": "YulTypedName",
														"src": "9716:6:8",
														"type": ""
													}
												],
												"src": "9649:345:8"
											},
											{
												"body": {
													"nativeSrc": "10106:118:8",
													"nodeType": "YulBlock",
													"src": "10106:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10128:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10128:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10136:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10136:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10124:3:8"
																		},
																		"nativeSrc": "10124:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10124:14:8"
																	},
																	{
																		"hexValue": "436f6d70757465526577617264733a20546f6b656e207472616e736665722066",
																		"kind": "string",
																		"nativeSrc": "10140:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10140:34:8",
																		"type": "",
																		"value": "ComputeRewards: Token transfer f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10117:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10117:6:8"
																},
																"nativeSrc": "10117:58:8",
																"nodeType": "YulFunctionCall",
																"src": "10117:58:8"
															},
															"nativeSrc": "10117:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "10117:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10196:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10204:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10204:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10192:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10192:3:8"
																		},
																		"nativeSrc": "10192:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10192:15:8"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nativeSrc": "10209:7:8",
																		"nodeType": "YulLiteral",
																		"src": "10209:7:8",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10185:6:8"
																},
																"nativeSrc": "10185:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10185:32:8"
															},
															"nativeSrc": "10185:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "10185:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925",
												"nativeSrc": "10000:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10098:6:8",
														"nodeType": "YulTypedName",
														"src": "10098:6:8",
														"type": ""
													}
												],
												"src": "10000:224:8"
											},
											{
												"body": {
													"nativeSrc": "10376:220:8",
													"nodeType": "YulBlock",
													"src": "10376:220:8",
													"statements": [
														{
															"nativeSrc": "10386:74:8",
															"nodeType": "YulAssignment",
															"src": "10386:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10452:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10452:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10457:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10393:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10393:58:8"
																},
																"nativeSrc": "10393:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10393:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10386:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10558:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10558:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925",
																	"nativeSrc": "10469:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10469:88:8"
																},
																"nativeSrc": "10469:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10469:93:8"
															},
															"nativeSrc": "10469:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10469:93:8"
														},
														{
															"nativeSrc": "10571:19:8",
															"nodeType": "YulAssignment",
															"src": "10571:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10582:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10582:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10587:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10587:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10578:3:8"
																},
																"nativeSrc": "10578:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10578:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10571:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10571:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10230:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10364:3:8",
														"nodeType": "YulTypedName",
														"src": "10364:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10372:3:8",
														"nodeType": "YulTypedName",
														"src": "10372:3:8",
														"type": ""
													}
												],
												"src": "10230:366:8"
											},
											{
												"body": {
													"nativeSrc": "10773:248:8",
													"nodeType": "YulBlock",
													"src": "10773:248:8",
													"statements": [
														{
															"nativeSrc": "10783:26:8",
															"nodeType": "YulAssignment",
															"src": "10783:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10795:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10795:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10806:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10806:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10791:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10791:3:8"
																},
																"nativeSrc": "10791:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10791:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10783:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10783:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10830:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10830:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10841:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10841:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:8"
																		},
																		"nativeSrc": "10826:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10826:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10849:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10849:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10855:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10845:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10845:3:8"
																		},
																		"nativeSrc": "10845:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10845:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10819:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10819:6:8"
																},
																"nativeSrc": "10819:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10819:47:8"
															},
															"nativeSrc": "10819:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10819:47:8"
														},
														{
															"nativeSrc": "10875:139:8",
															"nodeType": "YulAssignment",
															"src": "10875:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11009:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11009:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10883:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10883:124:8"
																},
																"nativeSrc": "10883:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10883:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10875:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10875:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10602:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10753:9:8",
														"nodeType": "YulTypedName",
														"src": "10753:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10768:4:8",
														"nodeType": "YulTypedName",
														"src": "10768:4:8",
														"type": ""
													}
												],
												"src": "10602:419:8"
											},
											{
												"body": {
													"nativeSrc": "11133:124:8",
													"nodeType": "YulBlock",
													"src": "11133:124:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11155:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11155:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11163:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11163:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11151:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11151:3:8"
																		},
																		"nativeSrc": "11151:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11151:14:8"
																	},
																	{
																		"hexValue": "436f6d70757465526577617264733a20496e707574206172726179206c656e67",
																		"kind": "string",
																		"nativeSrc": "11167:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11167:34:8",
																		"type": "",
																		"value": "ComputeRewards: Input array leng"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11144:6:8"
																},
																"nativeSrc": "11144:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11144:58:8"
															},
															"nativeSrc": "11144:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11144:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11223:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11223:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11231:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11231:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11219:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11219:3:8"
																		},
																		"nativeSrc": "11219:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11219:15:8"
																	},
																	{
																		"hexValue": "7468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "11236:13:8",
																		"nodeType": "YulLiteral",
																		"src": "11236:13:8",
																		"type": "",
																		"value": "th mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11212:6:8"
																},
																"nativeSrc": "11212:38:8",
																"nodeType": "YulFunctionCall",
																"src": "11212:38:8"
															},
															"nativeSrc": "11212:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "11212:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703",
												"nativeSrc": "11027:230:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11125:6:8",
														"nodeType": "YulTypedName",
														"src": "11125:6:8",
														"type": ""
													}
												],
												"src": "11027:230:8"
											},
											{
												"body": {
													"nativeSrc": "11409:220:8",
													"nodeType": "YulBlock",
													"src": "11409:220:8",
													"statements": [
														{
															"nativeSrc": "11419:74:8",
															"nodeType": "YulAssignment",
															"src": "11419:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11485:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11485:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11490:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11490:2:8",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11426:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11426:58:8"
																},
																"nativeSrc": "11426:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11426:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11419:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11591:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703",
																	"nativeSrc": "11502:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11502:88:8"
																},
																"nativeSrc": "11502:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11502:93:8"
															},
															"nativeSrc": "11502:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11502:93:8"
														},
														{
															"nativeSrc": "11604:19:8",
															"nodeType": "YulAssignment",
															"src": "11604:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11615:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11615:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11620:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11620:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11611:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11611:3:8"
																},
																"nativeSrc": "11611:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11611:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11604:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11263:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11397:3:8",
														"nodeType": "YulTypedName",
														"src": "11397:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11405:3:8",
														"nodeType": "YulTypedName",
														"src": "11405:3:8",
														"type": ""
													}
												],
												"src": "11263:366:8"
											},
											{
												"body": {
													"nativeSrc": "11806:248:8",
													"nodeType": "YulBlock",
													"src": "11806:248:8",
													"statements": [
														{
															"nativeSrc": "11816:26:8",
															"nodeType": "YulAssignment",
															"src": "11816:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11828:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11828:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11839:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11839:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11824:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11824:3:8"
																},
																"nativeSrc": "11824:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11824:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11816:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11816:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11863:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11863:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11874:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11874:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11859:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11859:3:8"
																		},
																		"nativeSrc": "11859:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11859:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11882:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11882:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11888:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11888:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11878:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11878:3:8"
																		},
																		"nativeSrc": "11878:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11878:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11852:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11852:6:8"
																},
																"nativeSrc": "11852:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11852:47:8"
															},
															"nativeSrc": "11852:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11852:47:8"
														},
														{
															"nativeSrc": "11908:139:8",
															"nodeType": "YulAssignment",
															"src": "11908:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12042:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12042:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11916:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11916:124:8"
																},
																"nativeSrc": "11916:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11916:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11908:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11908:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11635:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11786:9:8",
														"nodeType": "YulTypedName",
														"src": "11786:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11801:4:8",
														"nodeType": "YulTypedName",
														"src": "11801:4:8",
														"type": ""
													}
												],
												"src": "11635:419:8"
											},
											{
												"body": {
													"nativeSrc": "12088:152:8",
													"nodeType": "YulBlock",
													"src": "12088:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12105:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12105:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12108:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12108:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:8"
																},
																"nativeSrc": "12098:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12098:88:8"
															},
															"nativeSrc": "12098:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12098:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12202:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12202:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12205:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12205:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12195:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12195:6:8"
																},
																"nativeSrc": "12195:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12195:15:8"
															},
															"nativeSrc": "12195:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12195:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12226:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12226:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12229:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12229:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12219:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12219:6:8"
																},
																"nativeSrc": "12219:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12219:15:8"
															},
															"nativeSrc": "12219:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12219:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12060:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12060:180:8"
											},
											{
												"body": {
													"nativeSrc": "12274:152:8",
													"nodeType": "YulBlock",
													"src": "12274:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12291:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12291:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12294:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12294:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12284:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12284:6:8"
																},
																"nativeSrc": "12284:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12284:88:8"
															},
															"nativeSrc": "12284:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12284:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12388:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12388:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12391:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12381:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12381:6:8"
																},
																"nativeSrc": "12381:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12381:15:8"
															},
															"nativeSrc": "12381:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12381:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12412:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12412:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12415:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12415:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12405:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12405:6:8"
																},
																"nativeSrc": "12405:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12405:15:8"
															},
															"nativeSrc": "12405:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12405:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12246:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12246:180:8"
											},
											{
												"body": {
													"nativeSrc": "12476:147:8",
													"nodeType": "YulBlock",
													"src": "12476:147:8",
													"statements": [
														{
															"nativeSrc": "12486:25:8",
															"nodeType": "YulAssignment",
															"src": "12486:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12509:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12509:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12491:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12491:17:8"
																},
																"nativeSrc": "12491:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12491:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12486:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12486:1:8"
																}
															]
														},
														{
															"nativeSrc": "12520:25:8",
															"nodeType": "YulAssignment",
															"src": "12520:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12543:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12543:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12525:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12525:17:8"
																},
																"nativeSrc": "12525:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12525:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12520:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12520:1:8"
																}
															]
														},
														{
															"nativeSrc": "12554:16:8",
															"nodeType": "YulAssignment",
															"src": "12554:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12565:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12565:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12568:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12568:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12561:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12561:3:8"
																},
																"nativeSrc": "12561:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12561:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12554:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12554:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12594:22:8",
																"nodeType": "YulBlock",
																"src": "12594:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12596:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12596:16:8"
																			},
																			"nativeSrc": "12596:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12596:18:8"
																		},
																		"nativeSrc": "12596:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12596:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12586:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12586:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12589:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12589:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12583:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12583:2:8"
																},
																"nativeSrc": "12583:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12583:10:8"
															},
															"nativeSrc": "12580:36:8",
															"nodeType": "YulIf",
															"src": "12580:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12432:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12463:1:8",
														"nodeType": "YulTypedName",
														"src": "12463:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12466:1:8",
														"nodeType": "YulTypedName",
														"src": "12466:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12472:3:8",
														"nodeType": "YulTypedName",
														"src": "12472:3:8",
														"type": ""
													}
												],
												"src": "12432:191:8"
											},
											{
												"body": {
													"nativeSrc": "12735:75:8",
													"nodeType": "YulBlock",
													"src": "12735:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12757:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12757:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12765:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12765:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12753:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12753:3:8"
																		},
																		"nativeSrc": "12753:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12769:33:8",
																		"nodeType": "YulLiteral",
																		"src": "12769:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12746:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12746:6:8"
																},
																"nativeSrc": "12746:57:8",
																"nodeType": "YulFunctionCall",
																"src": "12746:57:8"
															},
															"nativeSrc": "12746:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "12746:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12629:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12727:6:8",
														"nodeType": "YulTypedName",
														"src": "12727:6:8",
														"type": ""
													}
												],
												"src": "12629:181:8"
											},
											{
												"body": {
													"nativeSrc": "12962:220:8",
													"nodeType": "YulBlock",
													"src": "12962:220:8",
													"statements": [
														{
															"nativeSrc": "12972:74:8",
															"nodeType": "YulAssignment",
															"src": "12972:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13038:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13038:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13043:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13043:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12979:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12979:58:8"
																},
																"nativeSrc": "12979:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12979:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12972:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12972:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13144:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13144:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13055:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13055:88:8"
																},
																"nativeSrc": "13055:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13055:93:8"
															},
															"nativeSrc": "13055:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13055:93:8"
														},
														{
															"nativeSrc": "13157:19:8",
															"nodeType": "YulAssignment",
															"src": "13157:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13168:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13168:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13173:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13173:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13164:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13164:3:8"
																},
																"nativeSrc": "13164:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13164:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13157:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13157:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12816:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12950:3:8",
														"nodeType": "YulTypedName",
														"src": "12950:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12958:3:8",
														"nodeType": "YulTypedName",
														"src": "12958:3:8",
														"type": ""
													}
												],
												"src": "12816:366:8"
											},
											{
												"body": {
													"nativeSrc": "13359:248:8",
													"nodeType": "YulBlock",
													"src": "13359:248:8",
													"statements": [
														{
															"nativeSrc": "13369:26:8",
															"nodeType": "YulAssignment",
															"src": "13369:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13381:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13381:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13392:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13392:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13377:3:8"
																},
																"nativeSrc": "13377:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13377:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13369:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13369:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13416:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13416:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13427:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13427:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13412:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13412:3:8"
																		},
																		"nativeSrc": "13412:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13412:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13435:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13435:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13441:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13441:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13431:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13431:3:8"
																		},
																		"nativeSrc": "13431:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13431:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13405:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13405:6:8"
																},
																"nativeSrc": "13405:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13405:47:8"
															},
															"nativeSrc": "13405:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13405:47:8"
														},
														{
															"nativeSrc": "13461:139:8",
															"nodeType": "YulAssignment",
															"src": "13461:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13595:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13595:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13469:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13469:124:8"
																},
																"nativeSrc": "13469:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13469:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13461:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13461:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13188:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13339:9:8",
														"nodeType": "YulTypedName",
														"src": "13339:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13354:4:8",
														"nodeType": "YulTypedName",
														"src": "13354:4:8",
														"type": ""
													}
												],
												"src": "13188:419:8"
											},
											{
												"body": {
													"nativeSrc": "13739:206:8",
													"nodeType": "YulBlock",
													"src": "13739:206:8",
													"statements": [
														{
															"nativeSrc": "13749:26:8",
															"nodeType": "YulAssignment",
															"src": "13749:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13761:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13761:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13772:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13772:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13757:3:8"
																},
																"nativeSrc": "13757:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13757:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13749:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13749:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13829:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13829:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13842:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13853:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13853:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13838:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13838:3:8"
																		},
																		"nativeSrc": "13838:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13838:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13785:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13785:43:8"
																},
																"nativeSrc": "13785:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13785:71:8"
															},
															"nativeSrc": "13785:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13785:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13910:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13910:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13923:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13923:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13934:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13934:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13919:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13919:3:8"
																		},
																		"nativeSrc": "13919:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13919:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "13866:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13866:43:8"
																},
																"nativeSrc": "13866:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13866:72:8"
															},
															"nativeSrc": "13866:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13866:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "13613:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13703:9:8",
														"nodeType": "YulTypedName",
														"src": "13703:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13715:6:8",
														"nodeType": "YulTypedName",
														"src": "13715:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13723:6:8",
														"nodeType": "YulTypedName",
														"src": "13723:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13734:4:8",
														"nodeType": "YulTypedName",
														"src": "13734:4:8",
														"type": ""
													}
												],
												"src": "13613:332:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$522_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$522_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$522_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$522__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$522_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640(memPtr) {\n\n        mstore(add(memPtr, 0), \"ComputeRewards: No rewards to cl\")\n\n        mstore(add(memPtr, 32), \"aim\")\n\n    }\n\n    function abi_encode_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925(memPtr) {\n\n        mstore(add(memPtr, 0), \"ComputeRewards: Token transfer f\")\n\n        mstore(add(memPtr, 32), \"ailed\")\n\n    }\n\n    function abi_encode_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703(memPtr) {\n\n        mstore(add(memPtr, 0), \"ComputeRewards: Input array leng\")\n\n        mstore(add(memPtr, 32), \"th mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"600": [
									{
										"length": 32,
										"start": 1336
									},
									{
										"length": 32,
										"start": 2117
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c806391d148541161008a578063bf83f51f11610064578063bf83f51f1461020f578063d547741f1461022b578063f7c618c114610247578063f854a27f14610265576100cd565b806391d14854146101b7578063a217fddf146101e7578063b88a802f14610205576100cd565b806301ffc9a7146100d15780630700037d1461010157806307e2cea514610131578063248a9ca31461014f5780632f2ff15d1461017f57806336568abe1461019b575b5f5ffd5b6100eb60048036038101906100e69190610c09565b610295565b6040516100f89190610c4e565b60405180910390f35b61011b60048036038101906101169190610cc1565b61030e565b6040516101289190610d04565b60405180910390f35b610139610323565b6040516101469190610d35565b60405180910390f35b61016960048036038101906101649190610d78565b610347565b6040516101769190610d35565b60405180910390f35b61019960048036038101906101949190610da3565b610363565b005b6101b560048036038101906101b09190610da3565b610385565b005b6101d160048036038101906101cc9190610da3565b610400565b6040516101de9190610c4e565b60405180910390f35b6101ef610463565b6040516101fc9190610d35565b60405180910390f35b61020d610469565b005b61022960048036038101906102249190610e97565b610669565b005b61024560048036038101906102409190610da3565b610821565b005b61024f610843565b60405161025c9190610f70565b60405180910390f35b61027f600480360381019061027a9190610cc1565b610867565b60405161028c9190610d04565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103075750610306826108ad565b5b9050919050565b6002602052805f5260405f205f915090505481565b7f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef181565b5f5f5f8381526020019081526020015f20600101549050919050565b61036c82610347565b61037581610916565b61037f838361092a565b50505050565b61038d610a13565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103f1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fb8282610a1a565b505050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b610471610b03565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90611009565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610591929190611036565b6020604051808303815f875af11580156105ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d19190611087565b610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611122565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516106569190610d04565b60405180910390a250610667610b52565b565b7f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef161069381610916565b8282905085859050146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d2906111b0565b60405180910390fd5b5f5f90505b85859050811015610819578383828181106106fe576106fd6111ce565b5b9050602002013560025f88888581811061071b5761071a6111ce565b5b90506020020160208101906107309190610cc1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107779190611228565b92505081905550858582818110610791576107906111ce565b5b90506020020160208101906107a69190610cc1565b73ffffffffffffffffffffffffffffffffffffffff167f560ef4f9524af91c8f006852a8707c3f256c238779f8cc088bbe202bb82e632e8585848181106107f0576107ef6111ce565b5b905060200201356040516108049190610d04565b60405180910390a280806001019150506106e0565b505050505050565b61082a82610347565b61083381610916565b61083d8383610a1a565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61092781610922610a13565b610b5b565b50565b5f6109358383610400565b610a095760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109a6610a13565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610a0d565b5f90505b92915050565b5f33905090565b5f610a258383610400565b15610af9575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a96610a13565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610afd565b5f90505b92915050565b600260015403610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f906112a5565b60405180910390fd5b6002600181905550565b60018081905550565b610b658282610400565b610ba85780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b9f9291906112c3565b60405180910390fd5b5050565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610be881610bb4565b8114610bf2575f5ffd5b50565b5f81359050610c0381610bdf565b92915050565b5f60208284031215610c1e57610c1d610bac565b5b5f610c2b84828501610bf5565b91505092915050565b5f8115159050919050565b610c4881610c34565b82525050565b5f602082019050610c615f830184610c3f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c9082610c67565b9050919050565b610ca081610c86565b8114610caa575f5ffd5b50565b5f81359050610cbb81610c97565b92915050565b5f60208284031215610cd657610cd5610bac565b5b5f610ce384828501610cad565b91505092915050565b5f819050919050565b610cfe81610cec565b82525050565b5f602082019050610d175f830184610cf5565b92915050565b5f819050919050565b610d2f81610d1d565b82525050565b5f602082019050610d485f830184610d26565b92915050565b610d5781610d1d565b8114610d61575f5ffd5b50565b5f81359050610d7281610d4e565b92915050565b5f60208284031215610d8d57610d8c610bac565b5b5f610d9a84828501610d64565b91505092915050565b5f5f60408385031215610db957610db8610bac565b5b5f610dc685828601610d64565b9250506020610dd785828601610cad565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610e0257610e01610de1565b5b8235905067ffffffffffffffff811115610e1f57610e1e610de5565b5b602083019150836020820283011115610e3b57610e3a610de9565b5b9250929050565b5f5f83601f840112610e5757610e56610de1565b5b8235905067ffffffffffffffff811115610e7457610e73610de5565b5b602083019150836020820283011115610e9057610e8f610de9565b5b9250929050565b5f5f5f5f60408587031215610eaf57610eae610bac565b5b5f85013567ffffffffffffffff811115610ecc57610ecb610bb0565b5b610ed887828801610ded565b9450945050602085013567ffffffffffffffff811115610efb57610efa610bb0565b5b610f0787828801610e42565b925092505092959194509250565b5f819050919050565b5f610f38610f33610f2e84610c67565b610f15565b610c67565b9050919050565b5f610f4982610f1e565b9050919050565b5f610f5a82610f3f565b9050919050565b610f6a81610f50565b82525050565b5f602082019050610f835f830184610f61565b92915050565b5f82825260208201905092915050565b7f436f6d70757465526577617264733a204e6f207265776172647320746f20636c5f8201527f61696d0000000000000000000000000000000000000000000000000000000000602082015250565b5f610ff3602383610f89565b9150610ffe82610f99565b604082019050919050565b5f6020820190508181035f83015261102081610fe7565b9050919050565b61103081610c86565b82525050565b5f6040820190506110495f830185611027565b6110566020830184610cf5565b9392505050565b61106681610c34565b8114611070575f5ffd5b50565b5f815190506110818161105d565b92915050565b5f6020828403121561109c5761109b610bac565b5b5f6110a984828501611073565b91505092915050565b7f436f6d70757465526577617264733a20546f6b656e207472616e7366657220665f8201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b5f61110c602583610f89565b9150611117826110b2565b604082019050919050565b5f6020820190508181035f83015261113981611100565b9050919050565b7f436f6d70757465526577617264733a20496e707574206172726179206c656e675f8201527f7468206d69736d61746368000000000000000000000000000000000000000000602082015250565b5f61119a602b83610f89565b91506111a582611140565b604082019050919050565b5f6020820190508181035f8301526111c78161118e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123282610cec565b915061123d83610cec565b9250828201905080821115611255576112546111fb565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61128f601f83610f89565b915061129a8261125b565b602082019050919050565b5f6020820190508181035f8301526112bc81611283565b9050919050565b5f6040820190506112d65f830185611027565b6112e36020830184610d26565b939250505056fea2646970667358221220b8b842027f78ad89ae9e4a02fef229f1fda4b8982435982c67120fc5dc278be364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBF83F51F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBF83F51F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x205 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x7E2CEA5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x307 JUMPI POP PUSH2 0x306 DUP3 PUSH2 0x8AD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x375 DUP2 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x37F DUP4 DUP4 PUSH2 0x92A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x38D PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FB DUP3 DUP3 PUSH2 0xA1A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH2 0x471 PUSH2 0xB03 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x667 PUSH2 0xB52 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1 PUSH2 0x693 DUP2 PUSH2 0x916 JUMP JUMPDEST DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D2 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x819 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x2 PUSH0 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71A PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x791 JUMPI PUSH2 0x790 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x560EF4F9524AF91C8F006852A8707C3F256C238779F8CC088BBE202BB82E632E DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x7F0 JUMPI PUSH2 0x7EF PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6E0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x82A DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x833 DUP2 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x83D DUP4 DUP4 PUSH2 0xA1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x927 DUP2 PUSH2 0x922 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x935 DUP4 DUP4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0xA09 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9A6 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA25 DUP4 DUP4 PUSH2 0x400 JUMP JUMPDEST ISZERO PUSH2 0xAF9 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA96 PUSH2 0xA13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAFD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB65 DUP3 DUP3 PUSH2 0x400 JUMP JUMPDEST PUSH2 0xBA8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE8 DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC03 DUP2 PUSH2 0xBDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2B DUP5 DUP3 DUP6 ADD PUSH2 0xBF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC48 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH0 DUP4 ADD DUP5 PUSH2 0xC3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC90 DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA0 DUP2 PUSH2 0xC86 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBB DUP2 PUSH2 0xC97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE3 DUP5 DUP3 DUP6 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFE DUP2 PUSH2 0xCEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD17 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD48 PUSH0 DUP4 ADD DUP5 PUSH2 0xD26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP2 EQ PUSH2 0xD61 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD72 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD9A DUP5 DUP3 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH2 0xDB8 PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC6 DUP6 DUP3 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD7 DUP6 DUP3 DUP7 ADD PUSH2 0xCAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE57 JUMPI PUSH2 0xE56 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE74 JUMPI PUSH2 0xE73 PUSH2 0xDE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST PUSH2 0xED8 DUP8 DUP3 DUP9 ADD PUSH2 0xDED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP8 DUP3 DUP9 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF38 PUSH2 0xF33 PUSH2 0xF2E DUP5 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF49 DUP3 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5A DUP3 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF83 PUSH0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A204E6F207265776172647320746F20636C PUSH0 DUP3 ADD MSTORE PUSH32 0x61696D0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFF3 PUSH1 0x23 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFE DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1020 DUP2 PUSH2 0xFE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1030 DUP2 PUSH2 0xC86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1049 PUSH0 DUP4 ADD DUP6 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x1056 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH2 0xC34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1070 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1081 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109B PUSH2 0xBAC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A9 DUP5 DUP3 DUP6 ADD PUSH2 0x1073 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A20546F6B656E207472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x110C PUSH1 0x25 DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x1117 DUP3 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1139 DUP2 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6D70757465526577617264733A20496E707574206172726179206C656E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468206D69736D61746368000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x119A PUSH1 0x2B DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A5 DUP3 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C7 DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1232 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP2 POP PUSH2 0x123D DUP4 PUSH2 0xCEC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128F PUSH1 0x1F DUP4 PUSH2 0xF89 JUMP JUMPDEST SWAP2 POP PUSH2 0x129A DUP3 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BC DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x12E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xB8 TIMESTAMP MUL PUSH32 0x78AD89AE9E4A02FEF229F1FDA4B8982435982C67120FC5DC278BE364736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "245:1475:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:42:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1223:373:7;;;:::i;:::-;;825:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;310:35:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;433:42:7:-;;;;;;;;;;;;;;;;;:::o;362:62::-;400:24;362:62;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2196:49::-;2241:4;2196:49;;;:::o;1223:373:7:-;2261:21:2;:19;:21::i;:::-;1279:14:7::1;1296:7;:19;1304:10;1296:19;;;;;;;;;;;;;;;;1279:36;;1343:1;1334:6;:10;1326:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1427:1;1405:7;:19;1413:10;1405:19;;;;;;;;;;;;;;;:23;;;;1457:11;:20;;;1478:10;1490:6;1457:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1449:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1569:10;1555:33;;;1581:6;1555:33;;;;;;:::i;:::-;;;;;;;;1268:328;2303:20:2::0;:18;:20::i;:::-;1223:373:7:o;825:390::-;400:24;2473:16:0;2484:4;2473:10;:16::i;:::-;973:8:7::1;;:15;;956:6;;:13;;:32;948:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1052:6;1061:1;1052:10;;1047:161;1068:6;;:13;;1064:1;:17;1047:161;;;1125:8;;1134:1;1125:11;;;;;;;:::i;:::-;;;;;;;;1103:7;:18;1111:6;;1118:1;1111:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1103:18;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1173:6;;1180:1;1173:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1156:40;;;1184:8;;1193:1;1184:11;;;;;;;:::i;:::-;;;;;;;;1156:40;;;;;;:::i;:::-;;;;;;;;1083:3;;;;;;;1047:161;;;;825:390:::0;;;;;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;310:35:7:-;;;:::o;1604:113::-;1668:7;1695;:14;1703:5;1695:14;;;;;;;;;;;;;;;;1688:21;;1604:113;;;:::o;730:146:5:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:8:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:77::-;2832:7;2861:5;2850:16;;2795:77;;;:::o;2878:118::-;2965:24;2983:5;2965:24;:::i;:::-;2960:3;2953:37;2878:118;;:::o;3002:222::-;3095:4;3133:2;3122:9;3118:18;3110:26;;3146:71;3214:1;3203:9;3199:17;3190:6;3146:71;:::i;:::-;3002:222;;;;:::o;3230:122::-;3303:24;3321:5;3303:24;:::i;:::-;3296:5;3293:35;3283:63;;3342:1;3339;3332:12;3283:63;3230:122;:::o;3358:139::-;3404:5;3442:6;3429:20;3420:29;;3458:33;3485:5;3458:33;:::i;:::-;3358:139;;;;:::o;3503:329::-;3562:6;3611:2;3599:9;3590:7;3586:23;3582:32;3579:119;;;3617:79;;:::i;:::-;3579:119;3737:1;3762:53;3807:7;3798:6;3787:9;3783:22;3762:53;:::i;:::-;3752:63;;3708:117;3503:329;;;;:::o;3838:474::-;3906:6;3914;3963:2;3951:9;3942:7;3938:23;3934:32;3931:119;;;3969:79;;:::i;:::-;3931:119;4089:1;4114:53;4159:7;4150:6;4139:9;4135:22;4114:53;:::i;:::-;4104:63;;4060:117;4216:2;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;:::i;:::-;4232:63;;4187:118;3838:474;;;;;:::o;4318:117::-;4427:1;4424;4417:12;4441:117;4550:1;4547;4540:12;4564:117;4673:1;4670;4663:12;4704:568;4777:8;4787:6;4837:3;4830:4;4822:6;4818:17;4814:27;4804:122;;4845:79;;:::i;:::-;4804:122;4958:6;4945:20;4935:30;;4988:18;4980:6;4977:30;4974:117;;;5010:79;;:::i;:::-;4974:117;5124:4;5116:6;5112:17;5100:29;;5178:3;5170:4;5162:6;5158:17;5148:8;5144:32;5141:41;5138:128;;;5185:79;;:::i;:::-;5138:128;4704:568;;;;;:::o;5295:::-;5368:8;5378:6;5428:3;5421:4;5413:6;5409:17;5405:27;5395:122;;5436:79;;:::i;:::-;5395:122;5549:6;5536:20;5526:30;;5579:18;5571:6;5568:30;5565:117;;;5601:79;;:::i;:::-;5565:117;5715:4;5707:6;5703:17;5691:29;;5769:3;5761:4;5753:6;5749:17;5739:8;5735:32;5732:41;5729:128;;;5776:79;;:::i;:::-;5729:128;5295:568;;;;;:::o;5869:934::-;5991:6;5999;6007;6015;6064:2;6052:9;6043:7;6039:23;6035:32;6032:119;;;6070:79;;:::i;:::-;6032:119;6218:1;6207:9;6203:17;6190:31;6248:18;6240:6;6237:30;6234:117;;;6270:79;;:::i;:::-;6234:117;6383:80;6455:7;6446:6;6435:9;6431:22;6383:80;:::i;:::-;6365:98;;;;6161:312;6540:2;6529:9;6525:18;6512:32;6571:18;6563:6;6560:30;6557:117;;;6593:79;;:::i;:::-;6557:117;6706:80;6778:7;6769:6;6758:9;6754:22;6706:80;:::i;:::-;6688:98;;;;6483:313;5869:934;;;;;;;:::o;6809:60::-;6837:3;6858:5;6851:12;;6809:60;;;:::o;6875:142::-;6925:9;6958:53;6976:34;6985:24;7003:5;6985:24;:::i;:::-;6976:34;:::i;:::-;6958:53;:::i;:::-;6945:66;;6875:142;;;:::o;7023:126::-;7073:9;7106:37;7137:5;7106:37;:::i;:::-;7093:50;;7023:126;;;:::o;7155:140::-;7219:9;7252:37;7283:5;7252:37;:::i;:::-;7239:50;;7155:140;;;:::o;7301:159::-;7402:51;7447:5;7402:51;:::i;:::-;7397:3;7390:64;7301:159;;:::o;7466:250::-;7573:4;7611:2;7600:9;7596:18;7588:26;;7624:85;7706:1;7695:9;7691:17;7682:6;7624:85;:::i;:::-;7466:250;;;;:::o;7722:169::-;7806:11;7840:6;7835:3;7828:19;7880:4;7875:3;7871:14;7856:29;;7722:169;;;;:::o;7897:222::-;8037:34;8033:1;8025:6;8021:14;8014:58;8106:5;8101:2;8093:6;8089:15;8082:30;7897:222;:::o;8125:366::-;8267:3;8288:67;8352:2;8347:3;8288:67;:::i;:::-;8281:74;;8364:93;8453:3;8364:93;:::i;:::-;8482:2;8477:3;8473:12;8466:19;;8125:366;;;:::o;8497:419::-;8663:4;8701:2;8690:9;8686:18;8678:26;;8750:9;8744:4;8740:20;8736:1;8725:9;8721:17;8714:47;8778:131;8904:4;8778:131;:::i;:::-;8770:139;;8497:419;;;:::o;8922:118::-;9009:24;9027:5;9009:24;:::i;:::-;9004:3;8997:37;8922:118;;:::o;9046:332::-;9167:4;9205:2;9194:9;9190:18;9182:26;;9218:71;9286:1;9275:9;9271:17;9262:6;9218:71;:::i;:::-;9299:72;9367:2;9356:9;9352:18;9343:6;9299:72;:::i;:::-;9046:332;;;;;:::o;9384:116::-;9454:21;9469:5;9454:21;:::i;:::-;9447:5;9444:32;9434:60;;9490:1;9487;9480:12;9434:60;9384:116;:::o;9506:137::-;9560:5;9591:6;9585:13;9576:22;;9607:30;9631:5;9607:30;:::i;:::-;9506:137;;;;:::o;9649:345::-;9716:6;9765:2;9753:9;9744:7;9740:23;9736:32;9733:119;;;9771:79;;:::i;:::-;9733:119;9891:1;9916:61;9969:7;9960:6;9949:9;9945:22;9916:61;:::i;:::-;9906:71;;9862:125;9649:345;;;;:::o;10000:224::-;10140:34;10136:1;10128:6;10124:14;10117:58;10209:7;10204:2;10196:6;10192:15;10185:32;10000:224;:::o;10230:366::-;10372:3;10393:67;10457:2;10452:3;10393:67;:::i;:::-;10386:74;;10469:93;10558:3;10469:93;:::i;:::-;10587:2;10582:3;10578:12;10571:19;;10230:366;;;:::o;10602:419::-;10768:4;10806:2;10795:9;10791:18;10783:26;;10855:9;10849:4;10845:20;10841:1;10830:9;10826:17;10819:47;10883:131;11009:4;10883:131;:::i;:::-;10875:139;;10602:419;;;:::o;11027:230::-;11167:34;11163:1;11155:6;11151:14;11144:58;11236:13;11231:2;11223:6;11219:15;11212:38;11027:230;:::o;11263:366::-;11405:3;11426:67;11490:2;11485:3;11426:67;:::i;:::-;11419:74;;11502:93;11591:3;11502:93;:::i;:::-;11620:2;11615:3;11611:12;11604:19;;11263:366;;;:::o;11635:419::-;11801:4;11839:2;11828:9;11824:18;11816:26;;11888:9;11882:4;11878:20;11874:1;11863:9;11859:17;11852:47;11916:131;12042:4;11916:131;:::i;:::-;11908:139;;11635:419;;;:::o;12060:180::-;12108:77;12105:1;12098:88;12205:4;12202:1;12195:15;12229:4;12226:1;12219:15;12246:180;12294:77;12291:1;12284:88;12391:4;12388:1;12381:15;12415:4;12412:1;12405:15;12432:191;12472:3;12491:20;12509:1;12491:20;:::i;:::-;12486:25;;12525:20;12543:1;12525:20;:::i;:::-;12520:25;;12568:1;12565;12561:9;12554:16;;12589:3;12586:1;12583:10;12580:36;;;12596:18;;:::i;:::-;12580:36;12432:191;;;;:::o;12629:181::-;12769:33;12765:1;12757:6;12753:14;12746:57;12629:181;:::o;12816:366::-;12958:3;12979:67;13043:2;13038:3;12979:67;:::i;:::-;12972:74;;13055:93;13144:3;13055:93;:::i;:::-;13173:2;13168:3;13164:12;13157:19;;12816:366;;;:::o;13188:419::-;13354:4;13392:2;13381:9;13377:18;13369:26;;13441:9;13435:4;13431:20;13427:1;13416:9;13412:17;13405:47;13469:131;13595:4;13469:131;:::i;:::-;13461:139;;13188:419;;;:::o;13613:332::-;13734:4;13772:2;13761:9;13757:18;13749:26;;13785:71;13853:1;13842:9;13838:17;13829:6;13785:71;:::i;:::-;13866:72;13934:2;13923:9;13919:18;13910:6;13866:72;:::i;:::-;13613:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "979200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"ORACLE_ROLE()": "370",
								"allocateRewards(address[],uint256[])": "infinite",
								"availableRewards(address)": "2917",
								"claimReward()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3143",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardToken()": "infinite",
								"rewards(address)": "2825",
								"supportsInterface(bytes4)": "718"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 617,
									"end": 817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 617,
									"end": 817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 690,
									"end": 709,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 669,
									"end": 710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 669,
									"end": 710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 669,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 750,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 750,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 752,
									"end": 762,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 721,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 721,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 721,
									"end": 763,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 721,
									"end": 763,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 400,
									"end": 424,
									"name": "PUSH",
									"source": 7,
									"value": "68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1"
								},
								{
									"begin": 798,
									"end": 808,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 774,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 774,
									"end": 784,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 774,
									"end": 784,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 774,
									"end": 809,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 774,
									"end": 809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 774,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 774,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 774,
									"end": 809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 617,
									"end": 817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "600"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 1720,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8b842027f78ad89ae9e4a02fef229f1fda4b8982435982c67120fc5dc278be364736f6c634300081e0033",
									".code": [
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "BF83F51F"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "BF83F51F"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "F7C618C1"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "F854A27F"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "B88A802F"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "700037D"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "7E2CEA5"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 1720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 433,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 433,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 825,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 825,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 310,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 310,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1604,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1604,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1604,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 433,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 400,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1"
										},
										{
											"begin": 362,
											"end": 424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 362,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1223,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1314,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1344,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1326,
											"end": 1384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1326,
											"end": 1384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1423,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1424,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1428,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1428,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 1457,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1478,
											"end": 1488,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1457,
											"end": 1497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1457,
											"end": 1497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1457,
											"end": 1497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1449,
											"end": 1539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1449,
											"end": 1539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1579,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 1581,
											"end": 1587,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1555,
											"end": 1588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1588,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 400,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "68E79A7BF1E0BC45D0A330C573BC367F9CF464FD326078812F301165FBDA4EF1"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 973,
											"end": 981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 973,
											"end": 988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 973,
											"end": 988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 956,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 956,
											"end": 962,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 956,
											"end": 969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 969,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 956,
											"end": 988,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 948,
											"end": 1036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 948,
											"end": 1036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1074,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1074,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1081,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1135,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1125,
											"end": 1136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1136,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1117,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1117,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1118,
											"end": 1119,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1111,
											"end": 1120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1111,
											"end": 1120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1103,
											"end": 1136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1181,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1173,
											"end": 1182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1173,
											"end": 1182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1173,
											"end": 1182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "560EF4F9524AF91C8F006852A8707C3F256C238779F8CC088BBE202BB82E632E"
										},
										{
											"begin": 1184,
											"end": 1192,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1192,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1184,
											"end": 1195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1156,
											"end": 1196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1196,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1208,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 825,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 345,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 310,
											"end": 345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2965,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 2963,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3214,
											"end": 3215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3196,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3146,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3146,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3303,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3328,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3458,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3590,
											"end": 3597,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3614,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3579,
											"end": 3698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3617,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3617,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3696,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3617,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3698,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3579,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3762,
											"end": 3815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3969,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4114,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 4242,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 4312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4435,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4318,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4425,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4441,
											"end": 4558,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4441,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4552,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4681,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4564,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4675,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4777,
											"end": 4785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4822,
											"end": 4828,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4841,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4845,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4845,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4804,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4965,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5007,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5091,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4974,
											"end": 5091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5010,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5010,
											"end": 5089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5089,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5010,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5091,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4974,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5181,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5174,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5175,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5141,
											"end": 5182,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5266,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5138,
											"end": 5266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5185,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5266,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5138,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 5272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5431,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5413,
											"end": 5419,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5395,
											"end": 5517,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5436,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5436,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5436,
											"end": 5515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5436,
											"end": 5515,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5436,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5395,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5598,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5601,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5601,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 5680,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5601,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5565,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 5719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5707,
											"end": 5713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5720,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5772,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5765,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5739,
											"end": 5747,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5773,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5857,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5729,
											"end": 5857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5776,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5729,
											"end": 5857,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5729,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5295,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6066,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6043,
											"end": 6050,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6039,
											"end": 6062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6035,
											"end": 6067,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6151,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6032,
											"end": 6151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6070,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6070,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6149,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6070,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6151,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6032,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6221,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6267,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6351,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6234,
											"end": 6351,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6270,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6351,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6234,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6455,
											"end": 6462,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6431,
											"end": 6453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6383,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6463,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 6383,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6463,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6463,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6512,
											"end": 6544,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6590,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6674,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6557,
											"end": 6674,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6593,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6674,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6557,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6778,
											"end": 6785,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6767,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6706,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6786,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6706,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6786,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6786,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6688,
											"end": 6786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 6803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6869,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6809,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 6863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 6863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7017,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6875,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6976,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6985,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6985,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 6985,
											"end": 7009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6985,
											"end": 7009,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6985,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6976,
											"end": 7010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7010,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6976,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 6958,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 7011,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6958,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7149,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 7023,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7137,
											"end": 7142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 7106,
											"end": 7143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7143,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7106,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7023,
											"end": 7149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7295,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 7155,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7283,
											"end": 7288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 7252,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7252,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7239,
											"end": 7289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7239,
											"end": 7289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7460,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7301,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7447,
											"end": 7452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 7402,
											"end": 7453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7453,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7402,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7397,
											"end": 7400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7454,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 7577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7600,
											"end": 7609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 7706,
											"end": 7707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7704,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7691,
											"end": 7708,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 7688,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 7624,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7709,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 7624,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7466,
											"end": 7716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7847,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7871,
											"end": 7885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8119,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7897,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8071,
											"name": "PUSH",
											"source": 8,
											"value": "436F6D70757465526577617264733A204E6F207265776172647320746F20636C"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8021,
											"end": 8035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8014,
											"end": 8072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8111,
											"name": "PUSH",
											"source": 8,
											"value": "61696D0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8093,
											"end": 8099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8089,
											"end": 8104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 8119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8491,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8125,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 8347,
											"end": 8350,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 8288,
											"end": 8355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8355,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 8288,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8355,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8364,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8453,
											"end": 8456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8364,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8364,
											"end": 8457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8364,
											"end": 8457,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8364,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8484,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8477,
											"end": 8480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8466,
											"end": 8485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8466,
											"end": 8485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8916,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 8497,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8690,
											"end": 8699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8744,
											"end": 8748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8760,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8736,
											"end": 8737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8714,
											"end": 8761,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8904,
											"end": 8908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 8778,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8909,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8778,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8770,
											"end": 8909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8770,
											"end": 8909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9040,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 8922,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9027,
											"end": 9032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 9009,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9033,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9009,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9007,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9034,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 9040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9194,
											"end": 9203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9190,
											"end": 9208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9182,
											"end": 9208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9182,
											"end": 9208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9284,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9271,
											"end": 9288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9262,
											"end": 9268,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 9218,
											"end": 9289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9289,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9218,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9299,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9299,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 9299,
											"end": 9371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9299,
											"end": 9371,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9299,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9500,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9384,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9469,
											"end": 9474,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 9454,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9454,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9476,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9434,
											"end": 9494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9492,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9494,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9434,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9560,
											"end": 9565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9585,
											"end": 9598,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9631,
											"end": 9636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 9607,
											"end": 9637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9637,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9607,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9753,
											"end": 9762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9751,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9740,
											"end": 9763,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9768,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9852,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9733,
											"end": 9852,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 9771,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9771,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9733,
											"end": 9852,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9733,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9969,
											"end": 9976,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9958,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9945,
											"end": 9967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 9916,
											"end": 9977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9916,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9649,
											"end": 9994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10224,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 10000,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10174,
											"name": "PUSH",
											"source": 8,
											"value": "436F6D70757465526577617264733A20546F6B656E207472616E736665722066"
										},
										{
											"begin": 10136,
											"end": 10137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10124,
											"end": 10138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10117,
											"end": 10175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10216,
											"name": "PUSH",
											"source": 8,
											"value": "61696C6564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10192,
											"end": 10207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10185,
											"end": 10217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10596,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 10230,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 10393,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10460,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10393,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10469,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10558,
											"end": 10561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10469,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 10469,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10469,
											"end": 10562,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10469,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10589,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10582,
											"end": 10585,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10578,
											"end": 10590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 11021,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 10602,
											"end": 11021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10768,
											"end": 10772,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10808,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10795,
											"end": 10804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10845,
											"end": 10865,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 11009,
											"end": 11013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 10883,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 11014,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 10883,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 11014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 11021,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 11021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 11021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 11021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11257,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 11027,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11167,
											"end": 11201,
											"name": "PUSH",
											"source": 8,
											"value": "436F6D70757465526577617264733A20496E707574206172726179206C656E67"
										},
										{
											"begin": 11163,
											"end": 11164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11155,
											"end": 11161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11151,
											"end": 11165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11236,
											"end": 11249,
											"name": "PUSH",
											"source": 8,
											"value": "7468206D69736D61746368000000000000000000000000000000000000000000"
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11223,
											"end": 11229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11219,
											"end": 11234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11405,
											"end": 11408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11490,
											"end": 11492,
											"name": "PUSH",
											"source": 8,
											"value": "2B"
										},
										{
											"begin": 11485,
											"end": 11488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 11426,
											"end": 11493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 11502,
											"end": 11595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11620,
											"end": 11622,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11615,
											"end": 11618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11604,
											"end": 11623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11263,
											"end": 11629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11828,
											"end": 11837,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11824,
											"end": 11842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11816,
											"end": 11842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11816,
											"end": 11842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11888,
											"end": 11897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11882,
											"end": 11886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11898,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11859,
											"end": 11876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11852,
											"end": 11899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12042,
											"end": 12046,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11916,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 12047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11908,
											"end": 12047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 12054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12060,
											"end": 12240,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 12060,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12185,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12105,
											"end": 12106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12195,
											"end": 12210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12229,
											"end": 12233,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12226,
											"end": 12227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12246,
											"end": 12426,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 12246,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12294,
											"end": 12371,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12284,
											"end": 12372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 12388,
											"end": 12389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12381,
											"end": 12396,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12472,
											"end": 12475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12509,
											"end": 12510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 12491,
											"end": 12511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12491,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12486,
											"end": 12511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12486,
											"end": 12511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12543,
											"end": 12544,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 12525,
											"end": 12545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12545,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12525,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12565,
											"end": 12566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12561,
											"end": 12570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12554,
											"end": 12570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12554,
											"end": 12570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12589,
											"end": 12592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12586,
											"end": 12587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12583,
											"end": 12593,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12580,
											"end": 12616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12580,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12580,
											"end": 12616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 12596,
											"end": 12614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12580,
											"end": 12616,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12580,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12810,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 12629,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12769,
											"end": 12802,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12753,
											"end": 12767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12746,
											"end": 12803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12816,
											"end": 13182,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 12816,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12958,
											"end": 12961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12979,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13043,
											"end": 13045,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13038,
											"end": 13041,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12979,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 12979,
											"end": 13046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12979,
											"end": 13046,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 12979,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 13046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 13046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13144,
											"end": 13147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13055,
											"end": 13148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13148,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13055,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13173,
											"end": 13175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13168,
											"end": 13171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13157,
											"end": 13176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13157,
											"end": 13176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12816,
											"end": 13182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12816,
											"end": 13182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12816,
											"end": 13182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12816,
											"end": 13182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13607,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 13188,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13394,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13377,
											"end": 13395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13369,
											"end": 13395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13369,
											"end": 13395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13441,
											"end": 13450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13435,
											"end": 13439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13431,
											"end": 13451,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13427,
											"end": 13428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13416,
											"end": 13425,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13405,
											"end": 13452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 13595,
											"end": 13599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 13469,
											"end": 13600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13469,
											"end": 13600,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 13469,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13461,
											"end": 13600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13461,
											"end": 13600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13734,
											"end": 13738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13761,
											"end": 13770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 13853,
											"end": 13854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13842,
											"end": 13851,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13838,
											"end": 13855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13829,
											"end": 13835,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 13785,
											"end": 13856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 13785,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13934,
											"end": 13936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13923,
											"end": 13932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13919,
											"end": 13937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13910,
											"end": 13916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 13866,
											"end": 13938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13938,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13866,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13613,
											"end": 13945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contract/ComputeRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"ORACLE_ROLE()": "07e2cea5",
							"allocateRewards(address[],uint256[])": "bf83f51f",
							"availableRewards(address)": "f854a27f",
							"claimReward()": "b88a802f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardToken()": "f7c618c1",
							"rewards(address)": "0700037d",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsAllocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"allocateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/ComputeRewards.sol\":\"ComputeRewards\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contract/ComputeRewards.sol\":{\"keccak256\":\"0x589783b9ef8bab6bdcc7079b29013e7807ab963aa5c40a24e8d5dea65eb1d401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9081a3bfae129b1f8f18ebfaa562f47ae77ed678239f3a140702f13e4620cc\",\"dweb:/ipfs/QmdVTXREvQ7KzXM8ovDoVy2J9fAG7CTCHWJEz6xEzC48ot\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contract/ComputeRewards.sol:ComputeRewards",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 390,
								"contract": "contract/ComputeRewards.sol:ComputeRewards",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 609,
								"contract": "contract/ComputeRewards.sol:ComputeRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contract/ComputeRewards.sol:ComputeRewards",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contract/ComputeRewards.sol:ComputeRewards",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							552
						],
						"ERC165": [
							576
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							588
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 553,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 552,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 577,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 576,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 552,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 576,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								576,
								588,
								379,
								552
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										575
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 575,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 385,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 383,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 388,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 387,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 444,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 401,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 404,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 405,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 409,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 414,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 419,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 420,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 444,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 444,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 439,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 437,
												"id": 441,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 444,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 445,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 447,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 456,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 465,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 522,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 522,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 522,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 522,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 522,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 522,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								456,
								465
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							552
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 525,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 552,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 539,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 538,
												"id": 541,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 552,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 547,
												"id": 549,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 552,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 553,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							576
						],
						"IERC165": [
							588
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 556,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 589,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 555,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 558,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "688:7:5"
									},
									"id": 559,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 557,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								588
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										587
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "812:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "829:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 569,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$588_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$588_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 568,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$588",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 573,
												"nodeType": "Return",
												"src": "822:47:5"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:5",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "757:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 561,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:5"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "806:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:5"
									},
									"scope": 576,
									"src": "730:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 577,
							"src": "660:218:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							588
						]
					},
					"id": 589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 579,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 581,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 588,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 589,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contract/ComputeRewards.sol": {
				"ast": {
					"absolutePath": "contract/ComputeRewards.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"ComputeRewards": [
							755
						],
						"Context": [
							552
						],
						"ERC165": [
							576
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							588
						],
						"IERC20": [
							522
						],
						"ReentrancyGuard": [
							444
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 523,
							"src": "61:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 297,
							"src": "119:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 445,
							"src": "179:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 594,
										"name": "AccessControl",
										"nameLocations": [
											"272:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "272:13:7"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "272:13:7"
								},
								{
									"baseName": {
										"id": 596,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"287:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "287:15:7"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "287:15:7"
								}
							],
							"canonicalName": "ComputeRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								444,
								296,
								576,
								588,
								379,
								552
							],
							"name": "ComputeRewards",
							"nameLocation": "254:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 600,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "334:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "310:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$522",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 599,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 598,
											"name": "IERC20",
											"nameLocations": [
												"310:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 522,
											"src": "310:6:7"
										},
										"referencedDeclaration": 522,
										"src": "310:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$522",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "07e2cea5",
									"id": 605,
									"mutability": "constant",
									"name": "ORACLE_ROLE",
									"nameLocation": "386:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "362:62:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 601,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "362:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4f5241434c455f524f4c45",
												"id": 603,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "410:13:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
													"typeString": "literal_string \"ORACLE_ROLE\""
												},
												"value": "ORACLE_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
													"typeString": "literal_string \"ORACLE_ROLE\""
												}
											],
											"id": 602,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "400:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 604,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "400:24:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 609,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "468:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 755,
									"src": "433:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 608,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 606,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "433:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 607,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "452:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "560ef4f9524af91c8f006852a8707c3f256c238779f8cc088bbe202bb82e632e",
									"id": 615,
									"name": "RewardsAllocated",
									"nameLocation": "490:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "523:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "507:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "537:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "529:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:38:7"
									},
									"src": "484:61:7"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 621,
									"name": "RewardClaimed",
									"nameLocation": "557:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "587:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "571:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "601:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "593:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:38:7"
									},
									"src": "551:58:7"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "658:159:7",
										"statements": [
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 626,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "669:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$522",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 628,
																"name": "_rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "690:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 627,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$522_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "683:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$522",
															"typeString": "contract IERC20"
														}
													},
													"src": "669:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$522",
														"typeString": "contract IERC20"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "669:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "732:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "752:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "756:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "752:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 632,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "721:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "721:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "721:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "ORACLE_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "785:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 640,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "798:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "802:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "798:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 638,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "774:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "774:35:7"
											}
										]
									},
									"id": 645,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "_rewardTokenAddress",
												"nameLocation": "637:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "629:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:29:7"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:0:7"
									},
									"scope": 755,
									"src": "617:200:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "937:278:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 658,
																	"name": "_users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "956:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "963:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "956:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 660,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "973:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "982:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "973:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "956:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d70757465526577617264733a20496e707574206172726179206c656e677468206d69736d61746368",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "990:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703",
																"typeString": "literal_string \"ComputeRewards: Input array length mismatch\""
															},
															"value": "ComputeRewards: Input array length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a93b23c0529022f269050671cfcb723e9fb2943d1654f86d88ee4beb9c9f703",
																"typeString": "literal_string \"ComputeRewards: Input array length mismatch\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "948:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:88:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "948:88:7"
											},
											{
												"body": {
													"id": 696,
													"nodeType": "Block",
													"src": "1088:120:7",
													"statements": [
														{
															"expression": {
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 677,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "1103:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 681,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 678,
																			"name": "_users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "1111:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 680,
																		"indexExpression": {
																			"id": 679,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "1118:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1111:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1103:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 682,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "1125:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 684,
																	"indexExpression": {
																		"id": 683,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "1134:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1125:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1103:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "1103:33:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 688,
																			"name": "_users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "1173:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 690,
																		"indexExpression": {
																			"id": 689,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "1180:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1173:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 691,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "1184:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 693,
																		"indexExpression": {
																			"id": 692,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "1193:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1184:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 687,
																	"name": "RewardsAllocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "1156:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1156:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "EmitStatement",
															"src": "1151:45:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1064:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 671,
															"name": "_users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "1068:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1075:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1068:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1064:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"initializationExpression": {
													"assignments": [
														667
													],
													"declarations": [
														{
															"constant": false,
															"id": 667,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1057:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 697,
															"src": "1052:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 666,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1052:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 669,
													"initialValue": {
														"hexValue": "30",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1061:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1052:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1083:3:7",
														"subExpression": {
															"id": 674,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1083:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"nodeType": "ExpressionStatement",
													"src": "1083:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1047:161:7"
											}
										]
									},
									"functionSelector": "bf83f51f",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 654,
													"name": "ORACLE_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "924:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 655,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyRole",
												"nameLocations": [
													"915:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "915:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "915:21:7"
										}
									],
									"name": "allocateRewards",
									"nameLocation": "834:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_users",
												"nameLocation": "869:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "850:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 646,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "850:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 647,
													"nodeType": "ArrayTypeName",
													"src": "850:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "896:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "877:27:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 649,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "877:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 650,
													"nodeType": "ArrayTypeName",
													"src": "877:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:56:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:0:7"
									},
									"scope": 755,
									"src": "825:390:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "1268:328:7",
										"statements": [
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1287:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "1279:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"baseExpression": {
														"id": 706,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1296:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 709,
													"indexExpression": {
														"expression": {
															"id": 707,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1304:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1308:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1304:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1296:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1279:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "1334:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1343:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1334:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d70757465526577617264733a204e6f207265776172647320746f20636c61696d",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1346:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640",
																"typeString": "literal_string \"ComputeRewards: No rewards to claim\""
															},
															"value": "ComputeRewards: No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b33412619d17b5512d0df74bac41f7807dd52fc8cd7c1d111c664a52b70c5640",
																"typeString": "literal_string \"ComputeRewards: No rewards to claim\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1326:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "1326:58:7"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "1405:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 721,
														"indexExpression": {
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1413:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1417:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1413:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1405:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1427:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1405:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1405:23:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 728,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1478:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1482:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1478:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 730,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "1490:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 726,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "1457:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$522",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1469:8:7",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 489,
																"src": "1457:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1457:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d70757465526577617264733a20546f6b656e207472616e73666572206661696c6564",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1499:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925",
																"typeString": "literal_string \"ComputeRewards: Token transfer failed\""
															},
															"value": "ComputeRewards: Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94acab7003a0fbb76b2fa2146f49e4e9aa69e6537234d423a5fc79c50429e925",
																"typeString": "literal_string \"ComputeRewards: Token transfer failed\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1449:90:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 736,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1569:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1569:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1581:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1555:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "EmitStatement",
												"src": "1550:38:7"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 701,
												"name": "nonReentrant",
												"nameLocations": [
													"1255:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "1255:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1255:12:7"
										}
									],
									"name": "claimReward",
									"nameLocation": "1232:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:2:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:0:7"
									},
									"scope": 755,
									"src": "1223:373:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "1677:40:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 749,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1695:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 751,
													"indexExpression": {
														"id": 750,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "1703:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1695:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 748,
												"id": 752,
												"nodeType": "Return",
												"src": "1688:21:7"
											}
										]
									},
									"functionSelector": "f854a27f",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nameLocation": "1613:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1638:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1630:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:7"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1668:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:9:7"
									},
									"scope": 755,
									"src": "1604:113:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "245:1475:7",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								615,
								621
							]
						}
					],
					"src": "33:1687:7"
				},
				"id": 7
			}
		}
	}
}